[DEFAULT]
; DOMAIN ADAPTATION
; - ENABLED_PLUGINS: indicate the plugins to use, separated by a space, in the execution order.
ENABLED_PLUGINS=cleanup_docker deploy_docker deploy_files load_test_locust test_deployment
; ENABLED_PLUGINS=cleanup_docker deploy_docker deploy_files load_test_locust test_deployment 
; EXPERIMENT CONFIGURATION
; - PROJECT_NAME: Name of the current project
; - TEST_SET_NAME: (Useful to group tests into test sets) Name of the test set
; - TEST_CASE_PREFIX: Prefix to add to every test; useful to distinguish test sets
; - ENABLED: Set to 0 to disable this test.
; - ENABLE_PHASE_SETUP: Enable phase "setup"
; - ENABLE_PHASE_DEPLOY: Enable phase "deploy"
; - ENABLE_PHASE_BEFORE: Enable phase "before"
; - ENABLE_PHASE_RUN: Enable phase "run"
; - ENABLE_PHASE_AFTER : Enable phase "after"
; - ENABLE_PHASE_UNDEPLOY: Enable phase "undeploy"
; - ENABLE_PHASE_TEARDOWN: Enable phase "teardown"
; - SECONDS_TO_WAIT_BEFORE_SETUP: Seconds to wait before starting the phase "setup"
; - SECONDS_TO_WAIT_BEFORE_DEPLOY: Seconds to wait before starting the phase "deploy"
; - SECONDS_TO_WAIT_BEFORE_BEFORE: Seconds to wait before starting the phase "before"
; - SECONDS_TO_WAIT_BEFORE_RUN: Seconds to wait before starting the phase "run"
; - SECONDS_TO_WAIT_BEFORE_AFTER : Seconds to wait before starting the phase "after"
; - SECONDS_TO_WAIT_BEFORE_UNDEPLOY: Seconds to wait before starting the phase "undeploy"
; - SECONDS_TO_WAIT_BEFORE_TEARDOWN: Seconds to wait before starting the phase "teardown"
PROJECT_NAME=Train ticket
TEST_SET_NAME=
TEST_CASE_PREFIX=tt
ENABLED=1
ENABLE_PHASE_SETUP=1
ENABLE_PHASE_DEPLOY=1
ENABLE_PHASE_BEFORE=1
ENABLE_PHASE_RUN=1
ENABLE_PHASE_AFTER=1 
ENABLE_PHASE_UNDEPLOY=1
ENABLE_PHASE_TEARDOWN=1
SECONDS_TO_WAIT_BEFORE_SETUP=0
SECONDS_TO_WAIT_BEFORE_DEPLOY=0
SECONDS_TO_WAIT_BEFORE_BEFORE=0
SECONDS_TO_WAIT_BEFORE_RUN=0
SECONDS_TO_WAIT_BEFORE_AFTER=0
SECONDS_TO_WAIT_BEFORE_UNDEPLOY=0
SECONDS_TO_WAIT_BEFORE_TEARDOWN=0

; LOAD TESTING USING LOCUST
; - LOCUST_HOST_URL: the url that locus uses to conduct performance tests.
; - LOAD: Load to generate for a test. This value should be specified in a test plan.
; - SPAWN_RATE_PER_SECOND: Speed at which new users are launched.
; - RUN_TIME_IN_SECONDS: Duration of the overall test.
LOCUST_HOST_URL=http://socks4.inf.unibz.it:8080
LOAD=0
SPAWN_RATE_PER_SECOND=10
RUN_TIME_IN_SECONDS=1200

; DEPLOYMENT USING DOCKER
; - DOCKER_NODE_NAME: the node on which the system under test (SUT) must be deployed.
; - DOCKER_WAITING_FOR_DEPLOYMENT_IN_SECONDS: seconds to wait till a system is deployed.
; - DOCKER_WAITING_FOR_UNDEPLOYMENT_IN_SECONDS: seconds to wait till a system is undeployed.
DOCKER_NODE_NAME=socks4
DOCKER_WAITING_FOR_DEPLOYMENT_IN_SECONDS=240
DOCKER_WAITING_FOR_UNDEPLOYMENT_IN_SECONDS=1
DOCKER_DEPLOY=1
DOCKER_UNDEPLOY=1

; DOCKER STATS
; - DOCKER_STATS_HOSTNAME: host to contact to obtain docker stats.
; - DOCKER_STATS_CONTAINERS: either choose 'all' or indicate the containers, separated by a space.
; - DOCKER_STATS_RUN_EVERY_NUMBER_OF_SECONDS: every how many seconds should docker stats be collected
DOCKER_STATS_HOSTNAME=socks4.inf.unibz.it
DOCKER_STATS_CONTAINERS=ts-ui-dashboard ts-voucher-service ts-admin-user-service ts-config-service ts-cancel-service ts-user-service ts-payment-service ts-order-service ts-execute-service ts-preserve-service ts-contacts-service ts-assurance-service ts-security-service ts-admin-travel-service ts-route-plan-service ts-inside-payment-service ts-travel2-service ts-preserve-other-service ts-station-service ts-seat-service ts-verification-code-service ts-admin-basic-info-service ts-notification-service ts-rebook-service ts-food-map-service ts-ticket-office-service ts-consign-service ts-auth-service ts-basic-service ts-news-service ts-travel-plan-service ts-admin-route-service ts-route-service ts-consign-price-service ts-food-service ts-price-service ts-order-other-service ts-ticketinfo-service ts-travel-service ts-admin-order-service ts-train-service
DOCKER_STATS_RUN_EVERY_NUMBER_OF_SECONDS=30

; JAEGER
; - JAEGER_HOST_URL: host to contact to obtain Jaeger traces.
; - JAEGER_SERVICES: either choose 'all' or indicate the services, separated by a space.
; - JAEGER_TEST_IF_SERVICE_IS_PRESENT: specify a service that should be present to start collecting Jaeger data
JAEGER_HOST_URL=http://socks4.inf.unibz.it:16686
JAEGER_SERVICES=all
JAEGER_TEST_IF_SERVICE_IS_PRESENT=

; TEST DEPLOYMENT
; - DOCKER_TEST_HOSTNAME: host to contact to obtain docker stats.
; - DOCKER_TEST_IF_IMAGE_IS_PRESENT: either choose 'all' or indicate the services, separated by a space.
DOCKER_TEST_HOSTNAME=socks4.inf.unibz.it
DOCKER_TEST_IF_IMAGE_IS_PRESENT=ts-ui-dashboard ts-ticket-office-service

; INCLUDE FILES TO DEPLOY
; - FILES_TO_INCLUDE: the list of files, separated by space, to include in the output folder
FILES_TO_INCLUDE=

; SUT SPECIFIC SETTINGS
DOCKER_CPUS=8
DOCKER_MEMORY_LIMIT_IN_MEGABYTES=16384
DOCKER_MEMORY_LIMIT_IN_MEGABYTES_OF_DATABASES=16384
LOG_STATISTICS_IN_HALF_MINUTE_CHUNKS=0
DOCKER_JAVA_MEMORY_LIMIT_IN_MEGABYTES=16384