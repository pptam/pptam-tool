# HTTP Server
server:
  port: 12032  # HTTP (Tomcat) port

spring:
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}
  application:
    name: ts-order-other-service
  datasource:
#    url: jdbc:mysql://localhost:3306/ts-order-other-mysql?useSSL=false
    url: jdbc:mysql://${ORDER_OTHER_MYSQL_HOST:ts-order-other-mysql}:${ORDER_OTHER_MYSQL_PORT:3306}/${ORDER_OTHER_MYSQL_DATABASE:ts-order-other-mysql}?useSSL=false
    username: ${ORDER_OTHER_MYSQL_USER:root}
    password: ${ORDER_OTHER_MYSQL_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true

#  rabbitmq:
#    host: rabbitmq
#    listener:
#      retry:
#        enabled: false
#        max-attempts: 1
#    template:
#      retry:
#        enabled: false
#        max-attempts: 1
#  cloud:
#    stream:
#      bindings:
#        output:
#          # group: ts-return-cancel
#          destination: ts-order-other-exchange
#          contentType: application/json
#          binder: rabbit
#        input:
#          group: ts-order-other-service
#          destination: ts-order-other-exchange
#          contentType: application/json
#          binder: rabbit

swagger:
  controllerPackage: other.controller
