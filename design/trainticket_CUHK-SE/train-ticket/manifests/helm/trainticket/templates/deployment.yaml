{{- $root := . }}
{{- range $name, $svc := .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.name }}
  labels:
    app: {{ $svc.name }}
spec:
  selector:
    matchLabels:
      app: {{ $svc.name }}
  template:
    metadata:
      labels:
        app: {{ $svc.name }}
    spec:
      {{- /* 根据监控类型和语言，条件性地注入 initContainers */}}
      {{- if and (not $svc.lang) (eq $root.Values.global.monitoring "skywalking") (eq $root.Values.opentelemetry.enabled true) }}
      initContainers:
        - name: init-skywalking-agent
          image: {{ $root.Values.skywalking.image }}
          command: ['sh', '-c', 'cp -r /skywalking/agent/* /skywalking-agent/']
          volumeMounts:
            - name: skywalking-agent
              mountPath: /skywalking-agent
      {{- end }}

      {{- if and (not $svc.lang) (eq $root.Values.global.monitoring "opentelemetry") (eq $root.Values.opentelemetry.enabled true) }}
      initContainers:
        - name: init-otel-agent
          image: {{ $root.Values.opentelemetry.image }}
          command: ['sh', '-c', 'cp /javaagent.jar /otel-agent/otel-agent.jar']
          volumeMounts:
            - name: otel-agent
              mountPath: /otel-agent
      {{- end }}

      containers:
        - name: {{ $svc.name }}
          image: "{{ $root.Values.global.image.repository }}/{{ $svc.name }}:{{ $root.Values.global.image.tag | default $root.Chart.AppVersion }}"
          {{- with $root.Values.global.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ $svc.secretRef | quote}}
          resources:
            {{- if $svc.resources }}
            {{- toYaml $svc.resources | nindent 12 }}
            {{- else }}
            {{- toYaml $root.Values.resources | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
            - name: timezone
              mountPath: /etc/timezone
              readOnly: true
          {{- with $root.Values.global.monitoring }}
            {{- if eq $svc.lang "python" }}
          env:
            - name: OTEL_TRACES_EXPORTER
              value: console,otlp
            - name: OTEL_METRICS_EXPORTER
              value: console,otlp
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ $svc.name }},service.namespace={{ $root.Release.Namespace }},pod.name=$(POD_NAME)"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            {{- end }}
            {{- if eq $svc.lang "frontend" }}
          env:
            - name: OTEL_TRACES_EXPORTER
              value: console,otlp
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ $svc.name }},service.namespace={{ $root.Release.Namespace }},pod.name=$(POD_NAME)"
            - name: OTEL_METRICS_EXPORTER
              value: console,otlp
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            {{- end }}
            {{- if eq $svc.lang "javascript" }}
          env:
            - name: OTEL_TRACES_EXPORTER
              value: console,otlp
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ $svc.name }},service.namespace={{ $root.Release.Namespace }}"
            - name: OTEL_METRICS_EXPORTER
              value: console,otlp
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            - name: OTEL_NODE_RESOURCE_DETECTORS
              value: "env,host,os"
            - name: NODE_OPTIONS
              value: "--require @opentelemetry/auto-instrumentations-node/register"
            {{- end }}
            {{- if not $svc.lang }} # 默认语言为java
              {{- if and (eq $root.Values.global.monitoring "skywalking") (eq $root.Values.opentelemetry.enabled true) }}
          volumeMounts:
            - name: skywalking-agent
              mountPath: /skywalking-agent
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
              value: "{{ $root.Release.Name }}-skywalking-helm-oap:11800"
            - name: SW_GRPC_LOG_SERVER_HOST
              value: "{{ $root.Release.Name }}-skywalking-helm-oap"
            - name: SW_GRPC_LOG_SERVER_PORT
              value: "11800"
            - name: SW_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/skywalking-agent/skywalking-agent.jar"
              {{- end }}
              {{- if and (eq $root.Values.global.monitoring "opentelemetry") (eq $root.Values.opentelemetry.enabled true) }}
          volumeMounts:
            - name: otel-agent
              mountPath: /otel-agent
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ $svc.name }},service.namespace={{ $root.Release.Namespace }},pod.name=$(POD_NAME)"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: |
                {{- if $root.Values.global.otelcollector }}
                {{ $root.Values.global.otelcollector }}
                {{- else }}
                http://$(NODE_IP):4317
                {{- end }}
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: grpc
            - name: OTEL_METRICS_EXPORTER
              value: otlp
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_LOGS_EXPORTER
              value: otlp
            - name: OTEL_EXPORTER_OTLP_SPAN_INSECURE
              value: "true"
            {{- if $root.Values.global.otelcollector }}
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel-agent/otel-agent.jar -Dotel.instrumentation.common.experimental.controller-telemetry.enabled=true"
            {{- else }}
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/var/odigos/java/javaagent.jar"
            {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
            type: File
        - name: timezone
          hostPath:
            path: /etc/timezone
            type: File
        {{- if and (not $svc.lang) (eq $root.Values.global.monitoring "skywalking") (eq $root.Values.opentelemetry.enabled true) }}
        - name: skywalking-agent
          emptyDir: {}
        {{- end }}
        {{- if and (not $svc.lang) (eq $root.Values.global.monitoring "opentelemetry") (eq $root.Values.opentelemetry.enabled true) }}
        - name: otel-agent
          emptyDir: {}
        {{- end }}
---
{{- end }}