// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo.proto

#include "demo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace oteldemo {
PROTOBUF_CONSTEXPR CartItem::CartItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.product_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.quantity_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CartItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CartItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CartItemDefaultTypeInternal() {}
  union {
    CartItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CartItemDefaultTypeInternal _CartItem_default_instance_;
PROTOBUF_CONSTEXPR AddItemRequest::AddItemRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddItemRequestDefaultTypeInternal() {}
  union {
    AddItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddItemRequestDefaultTypeInternal _AddItemRequest_default_instance_;
PROTOBUF_CONSTEXPR EmptyCartRequest::EmptyCartRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EmptyCartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyCartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyCartRequestDefaultTypeInternal() {}
  union {
    EmptyCartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyCartRequestDefaultTypeInternal _EmptyCartRequest_default_instance_;
PROTOBUF_CONSTEXPR GetCartRequest::GetCartRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCartRequestDefaultTypeInternal() {}
  union {
    GetCartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCartRequestDefaultTypeInternal _GetCartRequest_default_instance_;
PROTOBUF_CONSTEXPR Cart::Cart(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CartDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CartDefaultTypeInternal() {}
  union {
    Cart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CartDefaultTypeInternal _Cart_default_instance_;
PROTOBUF_CONSTEXPR Empty::Empty(
    ::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
PROTOBUF_CONSTEXPR ListRecommendationsRequest::ListRecommendationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.product_ids_)*/{}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListRecommendationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRecommendationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRecommendationsRequestDefaultTypeInternal() {}
  union {
    ListRecommendationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRecommendationsRequestDefaultTypeInternal _ListRecommendationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListRecommendationsResponse::ListRecommendationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.product_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListRecommendationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRecommendationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRecommendationsResponseDefaultTypeInternal() {}
  union {
    ListRecommendationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRecommendationsResponseDefaultTypeInternal _ListRecommendationsResponse_default_instance_;
PROTOBUF_CONSTEXPR Product::Product(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.categories_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.picture_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.price_usd_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProductDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProductDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProductDefaultTypeInternal() {}
  union {
    Product _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProductDefaultTypeInternal _Product_default_instance_;
PROTOBUF_CONSTEXPR ListProductsResponse::ListProductsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.products_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListProductsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListProductsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListProductsResponseDefaultTypeInternal() {}
  union {
    ListProductsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListProductsResponseDefaultTypeInternal _ListProductsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetProductRequest::GetProductRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetProductRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProductRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProductRequestDefaultTypeInternal() {}
  union {
    GetProductRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProductRequestDefaultTypeInternal _GetProductRequest_default_instance_;
PROTOBUF_CONSTEXPR SearchProductsRequest::SearchProductsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.query_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchProductsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchProductsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchProductsRequestDefaultTypeInternal() {}
  union {
    SearchProductsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchProductsRequestDefaultTypeInternal _SearchProductsRequest_default_instance_;
PROTOBUF_CONSTEXPR SearchProductsResponse::SearchProductsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.results_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchProductsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchProductsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchProductsResponseDefaultTypeInternal() {}
  union {
    SearchProductsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchProductsResponseDefaultTypeInternal _SearchProductsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetQuoteRequest::GetQuoteRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.address_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetQuoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetQuoteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetQuoteRequestDefaultTypeInternal() {}
  union {
    GetQuoteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetQuoteRequestDefaultTypeInternal _GetQuoteRequest_default_instance_;
PROTOBUF_CONSTEXPR GetQuoteResponse::GetQuoteResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cost_usd_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetQuoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetQuoteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetQuoteResponseDefaultTypeInternal() {}
  union {
    GetQuoteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetQuoteResponseDefaultTypeInternal _GetQuoteResponse_default_instance_;
PROTOBUF_CONSTEXPR ShipOrderRequest::ShipOrderRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.address_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShipOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShipOrderRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShipOrderRequestDefaultTypeInternal() {}
  union {
    ShipOrderRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShipOrderRequestDefaultTypeInternal _ShipOrderRequest_default_instance_;
PROTOBUF_CONSTEXPR ShipOrderResponse::ShipOrderResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tracking_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShipOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShipOrderResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShipOrderResponseDefaultTypeInternal() {}
  union {
    ShipOrderResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShipOrderResponseDefaultTypeInternal _ShipOrderResponse_default_instance_;
PROTOBUF_CONSTEXPR Address::Address(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.street_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.city_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.country_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.zip_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressDefaultTypeInternal() {}
  union {
    Address _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressDefaultTypeInternal _Address_default_instance_;
PROTOBUF_CONSTEXPR Money::Money(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.currency_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.units_)*/int64_t{0}
  , /*decltype(_impl_.nanos_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MoneyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoneyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoneyDefaultTypeInternal() {}
  union {
    Money _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoneyDefaultTypeInternal _Money_default_instance_;
PROTOBUF_CONSTEXPR GetSupportedCurrenciesResponse::GetSupportedCurrenciesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.currency_codes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSupportedCurrenciesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSupportedCurrenciesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSupportedCurrenciesResponseDefaultTypeInternal() {}
  union {
    GetSupportedCurrenciesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSupportedCurrenciesResponseDefaultTypeInternal _GetSupportedCurrenciesResponse_default_instance_;
PROTOBUF_CONSTEXPR CurrencyConversionRequest::CurrencyConversionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.to_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CurrencyConversionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrencyConversionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrencyConversionRequestDefaultTypeInternal() {}
  union {
    CurrencyConversionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrencyConversionRequestDefaultTypeInternal _CurrencyConversionRequest_default_instance_;
PROTOBUF_CONSTEXPR CreditCardInfo::CreditCardInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.credit_card_number_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.credit_card_cvv_)*/0
  , /*decltype(_impl_.credit_card_expiration_year_)*/0
  , /*decltype(_impl_.credit_card_expiration_month_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreditCardInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreditCardInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreditCardInfoDefaultTypeInternal() {}
  union {
    CreditCardInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreditCardInfoDefaultTypeInternal _CreditCardInfo_default_instance_;
PROTOBUF_CONSTEXPR ChargeRequest::ChargeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/nullptr
  , /*decltype(_impl_.credit_card_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChargeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChargeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChargeRequestDefaultTypeInternal() {}
  union {
    ChargeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChargeRequestDefaultTypeInternal _ChargeRequest_default_instance_;
PROTOBUF_CONSTEXPR ChargeResponse::ChargeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transaction_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChargeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChargeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChargeResponseDefaultTypeInternal() {}
  union {
    ChargeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChargeResponseDefaultTypeInternal _ChargeResponse_default_instance_;
PROTOBUF_CONSTEXPR OrderItem::OrderItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.cost_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderItemDefaultTypeInternal() {}
  union {
    OrderItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderItemDefaultTypeInternal _OrderItem_default_instance_;
PROTOBUF_CONSTEXPR OrderResult::OrderResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.order_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shipping_tracking_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shipping_cost_)*/nullptr
  , /*decltype(_impl_.shipping_address_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderResultDefaultTypeInternal() {}
  union {
    OrderResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderResultDefaultTypeInternal _OrderResult_default_instance_;
PROTOBUF_CONSTEXPR SendOrderConfirmationRequest::SendOrderConfirmationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendOrderConfirmationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendOrderConfirmationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendOrderConfirmationRequestDefaultTypeInternal() {}
  union {
    SendOrderConfirmationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendOrderConfirmationRequestDefaultTypeInternal _SendOrderConfirmationRequest_default_instance_;
PROTOBUF_CONSTEXPR PlaceOrderRequest::PlaceOrderRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_currency_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.address_)*/nullptr
  , /*decltype(_impl_.credit_card_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlaceOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaceOrderRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaceOrderRequestDefaultTypeInternal() {}
  union {
    PlaceOrderRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaceOrderRequestDefaultTypeInternal _PlaceOrderRequest_default_instance_;
PROTOBUF_CONSTEXPR PlaceOrderResponse::PlaceOrderResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlaceOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaceOrderResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaceOrderResponseDefaultTypeInternal() {}
  union {
    PlaceOrderResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaceOrderResponseDefaultTypeInternal _PlaceOrderResponse_default_instance_;
PROTOBUF_CONSTEXPR AdRequest::AdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_keys_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdRequestDefaultTypeInternal() {}
  union {
    AdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdRequestDefaultTypeInternal _AdRequest_default_instance_;
PROTOBUF_CONSTEXPR AdResponse::AdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ads_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdResponseDefaultTypeInternal() {}
  union {
    AdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdResponseDefaultTypeInternal _AdResponse_default_instance_;
PROTOBUF_CONSTEXPR Ad::Ad(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.redirect_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdDefaultTypeInternal() {}
  union {
    Ad _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdDefaultTypeInternal _Ad_default_instance_;
PROTOBUF_CONSTEXPR Flag::Flag(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enabled_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FlagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlagDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlagDefaultTypeInternal() {}
  union {
    Flag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlagDefaultTypeInternal _Flag_default_instance_;
PROTOBUF_CONSTEXPR GetFlagRequest::GetFlagRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFlagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFlagRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFlagRequestDefaultTypeInternal() {}
  union {
    GetFlagRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFlagRequestDefaultTypeInternal _GetFlagRequest_default_instance_;
PROTOBUF_CONSTEXPR GetFlagResponse::GetFlagResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFlagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFlagResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFlagResponseDefaultTypeInternal() {}
  union {
    GetFlagResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFlagResponseDefaultTypeInternal _GetFlagResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateFlagRequest::CreateFlagRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enabled_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateFlagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFlagRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFlagRequestDefaultTypeInternal() {}
  union {
    CreateFlagRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFlagRequestDefaultTypeInternal _CreateFlagRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateFlagResponse::CreateFlagResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateFlagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFlagResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFlagResponseDefaultTypeInternal() {}
  union {
    CreateFlagResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFlagResponseDefaultTypeInternal _CreateFlagResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateFlagRequest::UpdateFlagRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enabled_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateFlagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFlagRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFlagRequestDefaultTypeInternal() {}
  union {
    UpdateFlagRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFlagRequestDefaultTypeInternal _UpdateFlagRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateFlagResponse::UpdateFlagResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateFlagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFlagResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFlagResponseDefaultTypeInternal() {}
  union {
    UpdateFlagResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFlagResponseDefaultTypeInternal _UpdateFlagResponse_default_instance_;
PROTOBUF_CONSTEXPR ListFlagsRequest::ListFlagsRequest(
    ::_pbi::ConstantInitialized) {}
struct ListFlagsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFlagsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFlagsRequestDefaultTypeInternal() {}
  union {
    ListFlagsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFlagsRequestDefaultTypeInternal _ListFlagsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListFlagsResponse::ListFlagsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListFlagsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFlagsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFlagsResponseDefaultTypeInternal() {}
  union {
    ListFlagsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFlagsResponseDefaultTypeInternal _ListFlagsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteFlagRequest::DeleteFlagRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteFlagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFlagRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFlagRequestDefaultTypeInternal() {}
  union {
    DeleteFlagRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFlagRequestDefaultTypeInternal _DeleteFlagRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteFlagResponse::DeleteFlagResponse(
    ::_pbi::ConstantInitialized) {}
struct DeleteFlagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFlagResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFlagResponseDefaultTypeInternal() {}
  union {
    DeleteFlagResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFlagResponseDefaultTypeInternal _DeleteFlagResponse_default_instance_;
}  // namespace oteldemo
static ::_pb::Metadata file_level_metadata_demo_2eproto[43];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_demo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_demo_2eproto = nullptr;

const uint32_t TableStruct_demo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CartItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CartItem, _impl_.product_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CartItem, _impl_.quantity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::AddItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::AddItemRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::AddItemRequest, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::EmptyCartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::EmptyCartRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetCartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetCartRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Cart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Cart, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Cart, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListRecommendationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListRecommendationsRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListRecommendationsRequest, _impl_.product_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListRecommendationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListRecommendationsResponse, _impl_.product_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _impl_.picture_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _impl_.price_usd_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Product, _impl_.categories_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListProductsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListProductsResponse, _impl_.products_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetProductRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetProductRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::SearchProductsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::SearchProductsRequest, _impl_.query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::SearchProductsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::SearchProductsResponse, _impl_.results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetQuoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetQuoteRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetQuoteRequest, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetQuoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetQuoteResponse, _impl_.cost_usd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ShipOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ShipOrderRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::ShipOrderRequest, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ShipOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ShipOrderResponse, _impl_.tracking_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Address, _impl_.street_address_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Address, _impl_.city_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Address, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Address, _impl_.country_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Address, _impl_.zip_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Money, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Money, _impl_.currency_code_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Money, _impl_.units_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Money, _impl_.nanos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetSupportedCurrenciesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetSupportedCurrenciesResponse, _impl_.currency_codes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CurrencyConversionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CurrencyConversionRequest, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CurrencyConversionRequest, _impl_.to_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreditCardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreditCardInfo, _impl_.credit_card_number_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreditCardInfo, _impl_.credit_card_cvv_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreditCardInfo, _impl_.credit_card_expiration_year_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreditCardInfo, _impl_.credit_card_expiration_month_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ChargeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ChargeRequest, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::ChargeRequest, _impl_.credit_card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ChargeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ChargeResponse, _impl_.transaction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderItem, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderItem, _impl_.cost_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderResult, _impl_.order_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderResult, _impl_.shipping_tracking_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderResult, _impl_.shipping_cost_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderResult, _impl_.shipping_address_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::OrderResult, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::SendOrderConfirmationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::SendOrderConfirmationRequest, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::SendOrderConfirmationRequest, _impl_.order_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderRequest, _impl_.user_currency_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderRequest, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderRequest, _impl_.credit_card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::PlaceOrderResponse, _impl_.order_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::AdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::AdRequest, _impl_.context_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::AdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::AdResponse, _impl_.ads_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Ad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Ad, _impl_.redirect_url_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Ad, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Flag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::Flag, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Flag, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::Flag, _impl_.enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetFlagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetFlagRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetFlagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::GetFlagResponse, _impl_.flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreateFlagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreateFlagRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreateFlagRequest, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreateFlagRequest, _impl_.enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreateFlagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::CreateFlagResponse, _impl_.flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::UpdateFlagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::UpdateFlagRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::oteldemo::UpdateFlagRequest, _impl_.enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::UpdateFlagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListFlagsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListFlagsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::ListFlagsResponse, _impl_.flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::DeleteFlagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::oteldemo::DeleteFlagRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::oteldemo::DeleteFlagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::oteldemo::CartItem)},
  { 8, -1, -1, sizeof(::oteldemo::AddItemRequest)},
  { 16, -1, -1, sizeof(::oteldemo::EmptyCartRequest)},
  { 23, -1, -1, sizeof(::oteldemo::GetCartRequest)},
  { 30, -1, -1, sizeof(::oteldemo::Cart)},
  { 38, -1, -1, sizeof(::oteldemo::Empty)},
  { 44, -1, -1, sizeof(::oteldemo::ListRecommendationsRequest)},
  { 52, -1, -1, sizeof(::oteldemo::ListRecommendationsResponse)},
  { 59, -1, -1, sizeof(::oteldemo::Product)},
  { 71, -1, -1, sizeof(::oteldemo::ListProductsResponse)},
  { 78, -1, -1, sizeof(::oteldemo::GetProductRequest)},
  { 85, -1, -1, sizeof(::oteldemo::SearchProductsRequest)},
  { 92, -1, -1, sizeof(::oteldemo::SearchProductsResponse)},
  { 99, -1, -1, sizeof(::oteldemo::GetQuoteRequest)},
  { 107, -1, -1, sizeof(::oteldemo::GetQuoteResponse)},
  { 114, -1, -1, sizeof(::oteldemo::ShipOrderRequest)},
  { 122, -1, -1, sizeof(::oteldemo::ShipOrderResponse)},
  { 129, -1, -1, sizeof(::oteldemo::Address)},
  { 140, -1, -1, sizeof(::oteldemo::Money)},
  { 149, -1, -1, sizeof(::oteldemo::GetSupportedCurrenciesResponse)},
  { 156, -1, -1, sizeof(::oteldemo::CurrencyConversionRequest)},
  { 164, -1, -1, sizeof(::oteldemo::CreditCardInfo)},
  { 174, -1, -1, sizeof(::oteldemo::ChargeRequest)},
  { 182, -1, -1, sizeof(::oteldemo::ChargeResponse)},
  { 189, -1, -1, sizeof(::oteldemo::OrderItem)},
  { 197, -1, -1, sizeof(::oteldemo::OrderResult)},
  { 208, -1, -1, sizeof(::oteldemo::SendOrderConfirmationRequest)},
  { 216, -1, -1, sizeof(::oteldemo::PlaceOrderRequest)},
  { 227, -1, -1, sizeof(::oteldemo::PlaceOrderResponse)},
  { 234, -1, -1, sizeof(::oteldemo::AdRequest)},
  { 241, -1, -1, sizeof(::oteldemo::AdResponse)},
  { 248, -1, -1, sizeof(::oteldemo::Ad)},
  { 256, -1, -1, sizeof(::oteldemo::Flag)},
  { 265, -1, -1, sizeof(::oteldemo::GetFlagRequest)},
  { 272, -1, -1, sizeof(::oteldemo::GetFlagResponse)},
  { 279, -1, -1, sizeof(::oteldemo::CreateFlagRequest)},
  { 288, -1, -1, sizeof(::oteldemo::CreateFlagResponse)},
  { 295, -1, -1, sizeof(::oteldemo::UpdateFlagRequest)},
  { 303, -1, -1, sizeof(::oteldemo::UpdateFlagResponse)},
  { 309, -1, -1, sizeof(::oteldemo::ListFlagsRequest)},
  { 315, -1, -1, sizeof(::oteldemo::ListFlagsResponse)},
  { 322, -1, -1, sizeof(::oteldemo::DeleteFlagRequest)},
  { 329, -1, -1, sizeof(::oteldemo::DeleteFlagResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::oteldemo::_CartItem_default_instance_._instance,
  &::oteldemo::_AddItemRequest_default_instance_._instance,
  &::oteldemo::_EmptyCartRequest_default_instance_._instance,
  &::oteldemo::_GetCartRequest_default_instance_._instance,
  &::oteldemo::_Cart_default_instance_._instance,
  &::oteldemo::_Empty_default_instance_._instance,
  &::oteldemo::_ListRecommendationsRequest_default_instance_._instance,
  &::oteldemo::_ListRecommendationsResponse_default_instance_._instance,
  &::oteldemo::_Product_default_instance_._instance,
  &::oteldemo::_ListProductsResponse_default_instance_._instance,
  &::oteldemo::_GetProductRequest_default_instance_._instance,
  &::oteldemo::_SearchProductsRequest_default_instance_._instance,
  &::oteldemo::_SearchProductsResponse_default_instance_._instance,
  &::oteldemo::_GetQuoteRequest_default_instance_._instance,
  &::oteldemo::_GetQuoteResponse_default_instance_._instance,
  &::oteldemo::_ShipOrderRequest_default_instance_._instance,
  &::oteldemo::_ShipOrderResponse_default_instance_._instance,
  &::oteldemo::_Address_default_instance_._instance,
  &::oteldemo::_Money_default_instance_._instance,
  &::oteldemo::_GetSupportedCurrenciesResponse_default_instance_._instance,
  &::oteldemo::_CurrencyConversionRequest_default_instance_._instance,
  &::oteldemo::_CreditCardInfo_default_instance_._instance,
  &::oteldemo::_ChargeRequest_default_instance_._instance,
  &::oteldemo::_ChargeResponse_default_instance_._instance,
  &::oteldemo::_OrderItem_default_instance_._instance,
  &::oteldemo::_OrderResult_default_instance_._instance,
  &::oteldemo::_SendOrderConfirmationRequest_default_instance_._instance,
  &::oteldemo::_PlaceOrderRequest_default_instance_._instance,
  &::oteldemo::_PlaceOrderResponse_default_instance_._instance,
  &::oteldemo::_AdRequest_default_instance_._instance,
  &::oteldemo::_AdResponse_default_instance_._instance,
  &::oteldemo::_Ad_default_instance_._instance,
  &::oteldemo::_Flag_default_instance_._instance,
  &::oteldemo::_GetFlagRequest_default_instance_._instance,
  &::oteldemo::_GetFlagResponse_default_instance_._instance,
  &::oteldemo::_CreateFlagRequest_default_instance_._instance,
  &::oteldemo::_CreateFlagResponse_default_instance_._instance,
  &::oteldemo::_UpdateFlagRequest_default_instance_._instance,
  &::oteldemo::_UpdateFlagResponse_default_instance_._instance,
  &::oteldemo::_ListFlagsRequest_default_instance_._instance,
  &::oteldemo::_ListFlagsResponse_default_instance_._instance,
  &::oteldemo::_DeleteFlagRequest_default_instance_._instance,
  &::oteldemo::_DeleteFlagResponse_default_instance_._instance,
};

const char descriptor_table_protodef_demo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ndemo.proto\022\010oteldemo\"0\n\010CartItem\022\022\n\npr"
  "oduct_id\030\001 \001(\t\022\020\n\010quantity\030\002 \001(\005\"C\n\016AddI"
  "temRequest\022\017\n\007user_id\030\001 \001(\t\022 \n\004item\030\002 \001("
  "\0132\022.oteldemo.CartItem\"#\n\020EmptyCartReques"
  "t\022\017\n\007user_id\030\001 \001(\t\"!\n\016GetCartRequest\022\017\n\007"
  "user_id\030\001 \001(\t\":\n\004Cart\022\017\n\007user_id\030\001 \001(\t\022!"
  "\n\005items\030\002 \003(\0132\022.oteldemo.CartItem\"\007\n\005Emp"
  "ty\"B\n\032ListRecommendationsRequest\022\017\n\007user"
  "_id\030\001 \001(\t\022\023\n\013product_ids\030\002 \003(\t\"2\n\033ListRe"
  "commendationsResponse\022\023\n\013product_ids\030\001 \003"
  "(\t\"\201\001\n\007Product\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
  "\022\023\n\013description\030\003 \001(\t\022\017\n\007picture\030\004 \001(\t\022\""
  "\n\tprice_usd\030\005 \001(\0132\017.oteldemo.Money\022\022\n\nca"
  "tegories\030\006 \003(\t\";\n\024ListProductsResponse\022#"
  "\n\010products\030\001 \003(\0132\021.oteldemo.Product\"\037\n\021G"
  "etProductRequest\022\n\n\002id\030\001 \001(\t\"&\n\025SearchPr"
  "oductsRequest\022\r\n\005query\030\001 \001(\t\"<\n\026SearchPr"
  "oductsResponse\022\"\n\007results\030\001 \003(\0132\021.otelde"
  "mo.Product\"X\n\017GetQuoteRequest\022\"\n\007address"
  "\030\001 \001(\0132\021.oteldemo.Address\022!\n\005items\030\002 \003(\013"
  "2\022.oteldemo.CartItem\"5\n\020GetQuoteResponse"
  "\022!\n\010cost_usd\030\001 \001(\0132\017.oteldemo.Money\"Y\n\020S"
  "hipOrderRequest\022\"\n\007address\030\001 \001(\0132\021.oteld"
  "emo.Address\022!\n\005items\030\002 \003(\0132\022.oteldemo.Ca"
  "rtItem\"(\n\021ShipOrderResponse\022\023\n\013tracking_"
  "id\030\001 \001(\t\"a\n\007Address\022\026\n\016street_address\030\001 "
  "\001(\t\022\014\n\004city\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022\017\n\007coun"
  "try\030\004 \001(\t\022\020\n\010zip_code\030\005 \001(\t\"<\n\005Money\022\025\n\r"
  "currency_code\030\001 \001(\t\022\r\n\005units\030\002 \001(\003\022\r\n\005na"
  "nos\030\003 \001(\005\"8\n\036GetSupportedCurrenciesRespo"
  "nse\022\026\n\016currency_codes\030\001 \003(\t\"K\n\031CurrencyC"
  "onversionRequest\022\035\n\004from\030\001 \001(\0132\017.oteldem"
  "o.Money\022\017\n\007to_code\030\002 \001(\t\"\220\001\n\016CreditCardI"
  "nfo\022\032\n\022credit_card_number\030\001 \001(\t\022\027\n\017credi"
  "t_card_cvv\030\002 \001(\005\022#\n\033credit_card_expirati"
  "on_year\030\003 \001(\005\022$\n\034credit_card_expiration_"
  "month\030\004 \001(\005\"_\n\rChargeRequest\022\037\n\006amount\030\001"
  " \001(\0132\017.oteldemo.Money\022-\n\013credit_card\030\002 \001"
  "(\0132\030.oteldemo.CreditCardInfo\"(\n\016ChargeRe"
  "sponse\022\026\n\016transaction_id\030\001 \001(\t\"L\n\tOrderI"
  "tem\022 \n\004item\030\001 \001(\0132\022.oteldemo.CartItem\022\035\n"
  "\004cost\030\002 \001(\0132\017.oteldemo.Money\"\266\001\n\013OrderRe"
  "sult\022\020\n\010order_id\030\001 \001(\t\022\034\n\024shipping_track"
  "ing_id\030\002 \001(\t\022&\n\rshipping_cost\030\003 \001(\0132\017.ot"
  "eldemo.Money\022+\n\020shipping_address\030\004 \001(\0132\021"
  ".oteldemo.Address\022\"\n\005items\030\005 \003(\0132\023.oteld"
  "emo.OrderItem\"S\n\034SendOrderConfirmationRe"
  "quest\022\r\n\005email\030\001 \001(\t\022$\n\005order\030\002 \001(\0132\025.ot"
  "eldemo.OrderResult\"\235\001\n\021PlaceOrderRequest"
  "\022\017\n\007user_id\030\001 \001(\t\022\025\n\ruser_currency\030\002 \001(\t"
  "\022\"\n\007address\030\003 \001(\0132\021.oteldemo.Address\022\r\n\005"
  "email\030\005 \001(\t\022-\n\013credit_card\030\006 \001(\0132\030.oteld"
  "emo.CreditCardInfo\":\n\022PlaceOrderResponse"
  "\022$\n\005order\030\001 \001(\0132\025.oteldemo.OrderResult\"!"
  "\n\tAdRequest\022\024\n\014context_keys\030\001 \003(\t\"\'\n\nAdR"
  "esponse\022\031\n\003ads\030\001 \003(\0132\014.oteldemo.Ad\"(\n\002Ad"
  "\022\024\n\014redirect_url\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\":\n\004"
  "Flag\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022"
  "\017\n\007enabled\030\003 \001(\010\"\036\n\016GetFlagRequest\022\014\n\004na"
  "me\030\001 \001(\t\"/\n\017GetFlagResponse\022\034\n\004flag\030\001 \001("
  "\0132\016.oteldemo.Flag\"G\n\021CreateFlagRequest\022\014"
  "\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\017\n\007ena"
  "bled\030\003 \001(\010\"2\n\022CreateFlagResponse\022\034\n\004flag"
  "\030\001 \001(\0132\016.oteldemo.Flag\"2\n\021UpdateFlagRequ"
  "est\022\014\n\004name\030\001 \001(\t\022\017\n\007enabled\030\002 \001(\010\"\024\n\022Up"
  "dateFlagResponse\"\022\n\020ListFlagsRequest\"1\n\021"
  "ListFlagsResponse\022\034\n\004flag\030\001 \003(\0132\016.otelde"
  "mo.Flag\"!\n\021DeleteFlagRequest\022\014\n\004name\030\001 \001"
  "(\t\"\024\n\022DeleteFlagResponse2\270\001\n\013CartService"
  "\0226\n\007AddItem\022\030.oteldemo.AddItemRequest\032\017."
  "oteldemo.Empty\"\000\0225\n\007GetCart\022\030.oteldemo.G"
  "etCartRequest\032\016.oteldemo.Cart\"\000\022:\n\tEmpty"
  "Cart\022\032.oteldemo.EmptyCartRequest\032\017.oteld"
  "emo.Empty\"\0002}\n\025RecommendationService\022d\n\023"
  "ListRecommendations\022$.oteldemo.ListRecom"
  "mendationsRequest\032%.oteldemo.ListRecomme"
  "ndationsResponse\"\0002\361\001\n\025ProductCatalogSer"
  "vice\022A\n\014ListProducts\022\017.oteldemo.Empty\032\036."
  "oteldemo.ListProductsResponse\"\000\022>\n\nGetPr"
  "oduct\022\033.oteldemo.GetProductRequest\032\021.ote"
  "ldemo.Product\"\000\022U\n\016SearchProducts\022\037.otel"
  "demo.SearchProductsRequest\032 .oteldemo.Se"
  "archProductsResponse\"\0002\236\001\n\017ShippingServi"
  "ce\022C\n\010GetQuote\022\031.oteldemo.GetQuoteReques"
  "t\032\032.oteldemo.GetQuoteResponse\"\000\022F\n\tShipO"
  "rder\022\032.oteldemo.ShipOrderRequest\032\033.oteld"
  "emo.ShipOrderResponse\"\0002\253\001\n\017CurrencyServ"
  "ice\022U\n\026GetSupportedCurrencies\022\017.oteldemo"
  ".Empty\032(.oteldemo.GetSupportedCurrencies"
  "Response\"\000\022A\n\007Convert\022#.oteldemo.Currenc"
  "yConversionRequest\032\017.oteldemo.Money\"\0002O\n"
  "\016PaymentService\022=\n\006Charge\022\027.oteldemo.Cha"
  "rgeRequest\032\030.oteldemo.ChargeResponse\"\0002b"
  "\n\014EmailService\022R\n\025SendOrderConfirmation\022"
  "&.oteldemo.SendOrderConfirmationRequest\032"
  "\017.oteldemo.Empty\"\0002\\\n\017CheckoutService\022I\n"
  "\nPlaceOrder\022\033.oteldemo.PlaceOrderRequest"
  "\032\034.oteldemo.PlaceOrderResponse\"\0002B\n\tAdSe"
  "rvice\0225\n\006GetAds\022\023.oteldemo.AdRequest\032\024.o"
  "teldemo.AdResponse\"\0002\377\002\n\022FeatureFlagServ"
  "ice\022@\n\007GetFlag\022\030.oteldemo.GetFlagRequest"
  "\032\031.oteldemo.GetFlagResponse\"\000\022I\n\nCreateF"
  "lag\022\033.oteldemo.CreateFlagRequest\032\034.oteld"
  "emo.CreateFlagResponse\"\000\022I\n\nUpdateFlag\022\033"
  ".oteldemo.UpdateFlagRequest\032\034.oteldemo.U"
  "pdateFlagResponse\"\000\022F\n\tListFlags\022\032.oteld"
  "emo.ListFlagsRequest\032\033.oteldemo.ListFlag"
  "sResponse\"\000\022I\n\nDeleteFlag\022\033.oteldemo.Del"
  "eteFlagRequest\032\034.oteldemo.DeleteFlagResp"
  "onse\"\000B\023Z\021genproto/oteldemob\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_demo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_demo_2eproto = {
    false, false, 4395, descriptor_table_protodef_demo_2eproto,
    "demo.proto",
    &descriptor_table_demo_2eproto_once, nullptr, 0, 43,
    schemas, file_default_instances, TableStruct_demo_2eproto::offsets,
    file_level_metadata_demo_2eproto, file_level_enum_descriptors_demo_2eproto,
    file_level_service_descriptors_demo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_demo_2eproto_getter() {
  return &descriptor_table_demo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_demo_2eproto(&descriptor_table_demo_2eproto);
namespace oteldemo {

// ===================================================================

class CartItem::_Internal {
 public:
};

CartItem::CartItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.CartItem)
}
CartItem::CartItem(const CartItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CartItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.product_id_){}
    , decltype(_impl_.quantity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.product_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.product_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_product_id().empty()) {
    _this->_impl_.product_id_.Set(from._internal_product_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.quantity_ = from._impl_.quantity_;
  // @@protoc_insertion_point(copy_constructor:oteldemo.CartItem)
}

inline void CartItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.product_id_){}
    , decltype(_impl_.quantity_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.product_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.product_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CartItem::~CartItem() {
  // @@protoc_insertion_point(destructor:oteldemo.CartItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CartItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.product_id_.Destroy();
}

void CartItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CartItem::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.CartItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.product_id_.ClearToEmpty();
  _impl_.quantity_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CartItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string product_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_product_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.CartItem.product_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 quantity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CartItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.CartItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (!this->_internal_product_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_product_id().data(), static_cast<int>(this->_internal_product_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.CartItem.product_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_product_id(), target);
  }

  // int32 quantity = 2;
  if (this->_internal_quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.CartItem)
  return target;
}

size_t CartItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.CartItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string product_id = 1;
  if (!this->_internal_product_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_product_id());
  }

  // int32 quantity = 2;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CartItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CartItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CartItem::GetClassData() const { return &_class_data_; }


void CartItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CartItem*>(&to_msg);
  auto& from = static_cast<const CartItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.CartItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_product_id().empty()) {
    _this->_internal_set_product_id(from._internal_product_id());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CartItem::CopyFrom(const CartItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.CartItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartItem::IsInitialized() const {
  return true;
}

void CartItem::InternalSwap(CartItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.product_id_, lhs_arena,
      &other->_impl_.product_id_, rhs_arena
  );
  swap(_impl_.quantity_, other->_impl_.quantity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CartItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[0]);
}

// ===================================================================

class AddItemRequest::_Internal {
 public:
  static const ::oteldemo::CartItem& item(const AddItemRequest* msg);
};

const ::oteldemo::CartItem&
AddItemRequest::_Internal::item(const AddItemRequest* msg) {
  return *msg->_impl_.item_;
}
AddItemRequest::AddItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.AddItemRequest)
}
AddItemRequest::AddItemRequest(const AddItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddItemRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::oteldemo::CartItem(*from._impl_.item_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.AddItemRequest)
}

inline void AddItemRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddItemRequest::~AddItemRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.AddItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.item_;
}

void AddItemRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.AddItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.AddItemRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.CartItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.AddItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.AddItemRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // .oteldemo.CartItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.AddItemRequest)
  return target;
}

size_t AddItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.AddItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .oteldemo.CartItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddItemRequest::GetClassData() const { return &_class_data_; }


void AddItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddItemRequest*>(&to_msg);
  auto& from = static_cast<const AddItemRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.AddItemRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::oteldemo::CartItem::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddItemRequest::CopyFrom(const AddItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.AddItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddItemRequest::IsInitialized() const {
  return true;
}

void AddItemRequest::InternalSwap(AddItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  swap(_impl_.item_, other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[1]);
}

// ===================================================================

class EmptyCartRequest::_Internal {
 public:
};

EmptyCartRequest::EmptyCartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.EmptyCartRequest)
}
EmptyCartRequest::EmptyCartRequest(const EmptyCartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EmptyCartRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.EmptyCartRequest)
}

inline void EmptyCartRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EmptyCartRequest::~EmptyCartRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.EmptyCartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EmptyCartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
}

void EmptyCartRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EmptyCartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.EmptyCartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmptyCartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.EmptyCartRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EmptyCartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.EmptyCartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.EmptyCartRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.EmptyCartRequest)
  return target;
}

size_t EmptyCartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.EmptyCartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmptyCartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EmptyCartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmptyCartRequest::GetClassData() const { return &_class_data_; }


void EmptyCartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EmptyCartRequest*>(&to_msg);
  auto& from = static_cast<const EmptyCartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.EmptyCartRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EmptyCartRequest::CopyFrom(const EmptyCartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.EmptyCartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyCartRequest::IsInitialized() const {
  return true;
}

void EmptyCartRequest::InternalSwap(EmptyCartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EmptyCartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[2]);
}

// ===================================================================

class GetCartRequest::_Internal {
 public:
};

GetCartRequest::GetCartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetCartRequest)
}
GetCartRequest::GetCartRequest(const GetCartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCartRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetCartRequest)
}

inline void GetCartRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCartRequest::~GetCartRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.GetCartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
}

void GetCartRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetCartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.GetCartRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetCartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.GetCartRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetCartRequest)
  return target;
}

size_t GetCartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetCartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCartRequest::GetClassData() const { return &_class_data_; }


void GetCartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCartRequest*>(&to_msg);
  auto& from = static_cast<const GetCartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetCartRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCartRequest::CopyFrom(const GetCartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetCartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCartRequest::IsInitialized() const {
  return true;
}

void GetCartRequest::InternalSwap(GetCartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[3]);
}

// ===================================================================

class Cart::_Internal {
 public:
};

Cart::Cart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.Cart)
}
Cart::Cart(const Cart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Cart* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.Cart)
}

inline void Cart::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Cart::~Cart() {
  // @@protoc_insertion_point(destructor:oteldemo.Cart)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Cart::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.user_id_.Destroy();
}

void Cart::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Cart::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.Cart)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cart::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Cart.user_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .oteldemo.CartItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Cart::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.Cart)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Cart.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // repeated .oteldemo.CartItem items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.Cart)
  return target;
}

size_t Cart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.Cart)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.CartItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Cart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Cart::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Cart::GetClassData() const { return &_class_data_; }


void Cart::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Cart*>(&to_msg);
  auto& from = static_cast<const Cart&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.Cart)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Cart::CopyFrom(const Cart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.Cart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cart::IsInitialized() const {
  return true;
}

void Cart::InternalSwap(Cart* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Cart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[4]);
}

// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:oteldemo.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Empty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.Empty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Empty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[5]);
}

// ===================================================================

class ListRecommendationsRequest::_Internal {
 public:
};

ListRecommendationsRequest::ListRecommendationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ListRecommendationsRequest)
}
ListRecommendationsRequest::ListRecommendationsRequest(const ListRecommendationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListRecommendationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.product_ids_){from._impl_.product_ids_}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.ListRecommendationsRequest)
}

inline void ListRecommendationsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.product_ids_){arena}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRecommendationsRequest::~ListRecommendationsRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.ListRecommendationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRecommendationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.product_ids_.~RepeatedPtrField();
  _impl_.user_id_.Destroy();
}

void ListRecommendationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListRecommendationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ListRecommendationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.product_ids_.Clear();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRecommendationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.ListRecommendationsRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string product_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_product_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "oteldemo.ListRecommendationsRequest.product_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRecommendationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ListRecommendationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.ListRecommendationsRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // repeated string product_ids = 2;
  for (int i = 0, n = this->_internal_product_ids_size(); i < n; i++) {
    const auto& s = this->_internal_product_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.ListRecommendationsRequest.product_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ListRecommendationsRequest)
  return target;
}

size_t ListRecommendationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ListRecommendationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string product_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.product_ids_.size());
  for (int i = 0, n = _impl_.product_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.product_ids_.Get(i));
  }

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRecommendationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListRecommendationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRecommendationsRequest::GetClassData() const { return &_class_data_; }


void ListRecommendationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListRecommendationsRequest*>(&to_msg);
  auto& from = static_cast<const ListRecommendationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ListRecommendationsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.product_ids_.MergeFrom(from._impl_.product_ids_);
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRecommendationsRequest::CopyFrom(const ListRecommendationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ListRecommendationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRecommendationsRequest::IsInitialized() const {
  return true;
}

void ListRecommendationsRequest::InternalSwap(ListRecommendationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.product_ids_.InternalSwap(&other->_impl_.product_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRecommendationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[6]);
}

// ===================================================================

class ListRecommendationsResponse::_Internal {
 public:
};

ListRecommendationsResponse::ListRecommendationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ListRecommendationsResponse)
}
ListRecommendationsResponse::ListRecommendationsResponse(const ListRecommendationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListRecommendationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.product_ids_){from._impl_.product_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.ListRecommendationsResponse)
}

inline void ListRecommendationsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.product_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListRecommendationsResponse::~ListRecommendationsResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.ListRecommendationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRecommendationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.product_ids_.~RepeatedPtrField();
}

void ListRecommendationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListRecommendationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ListRecommendationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.product_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRecommendationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string product_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_product_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "oteldemo.ListRecommendationsResponse.product_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRecommendationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ListRecommendationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string product_ids = 1;
  for (int i = 0, n = this->_internal_product_ids_size(); i < n; i++) {
    const auto& s = this->_internal_product_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.ListRecommendationsResponse.product_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ListRecommendationsResponse)
  return target;
}

size_t ListRecommendationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ListRecommendationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string product_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.product_ids_.size());
  for (int i = 0, n = _impl_.product_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.product_ids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRecommendationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListRecommendationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRecommendationsResponse::GetClassData() const { return &_class_data_; }


void ListRecommendationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListRecommendationsResponse*>(&to_msg);
  auto& from = static_cast<const ListRecommendationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ListRecommendationsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.product_ids_.MergeFrom(from._impl_.product_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRecommendationsResponse::CopyFrom(const ListRecommendationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ListRecommendationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRecommendationsResponse::IsInitialized() const {
  return true;
}

void ListRecommendationsResponse::InternalSwap(ListRecommendationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.product_ids_.InternalSwap(&other->_impl_.product_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRecommendationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[7]);
}

// ===================================================================

class Product::_Internal {
 public:
  static const ::oteldemo::Money& price_usd(const Product* msg);
};

const ::oteldemo::Money&
Product::_Internal::price_usd(const Product* msg) {
  return *msg->_impl_.price_usd_;
}
Product::Product(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.Product)
}
Product::Product(const Product& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Product* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.categories_){from._impl_.categories_}
    , decltype(_impl_.id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.picture_){}
    , decltype(_impl_.price_usd_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.picture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.picture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_picture().empty()) {
    _this->_impl_.picture_.Set(from._internal_picture(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_price_usd()) {
    _this->_impl_.price_usd_ = new ::oteldemo::Money(*from._impl_.price_usd_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.Product)
}

inline void Product::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.categories_){arena}
    , decltype(_impl_.id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.picture_){}
    , decltype(_impl_.price_usd_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.picture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.picture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:oteldemo.Product)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Product::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.categories_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.picture_.Destroy();
  if (this != internal_default_instance()) delete _impl_.price_usd_;
}

void Product::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.Product)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.categories_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.picture_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.price_usd_ != nullptr) {
    delete _impl_.price_usd_;
  }
  _impl_.price_usd_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Product::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Product.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Product.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Product.description"));
        } else
          goto handle_unusual;
        continue;
      // string picture = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_picture();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Product.picture"));
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.Money price_usd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_price_usd(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string categories = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_categories();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Product.categories"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Product::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.Product)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Product.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Product.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Product.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string picture = 4;
  if (!this->_internal_picture().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_picture().data(), static_cast<int>(this->_internal_picture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Product.picture");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_picture(), target);
  }

  // .oteldemo.Money price_usd = 5;
  if (this->_internal_has_price_usd()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::price_usd(this),
        _Internal::price_usd(this).GetCachedSize(), target, stream);
  }

  // repeated string categories = 6;
  for (int i = 0, n = this->_internal_categories_size(); i < n; i++) {
    const auto& s = this->_internal_categories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Product.categories");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.Product)
  return target;
}

size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.Product)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string categories = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.categories_.size());
  for (int i = 0, n = _impl_.categories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.categories_.Get(i));
  }

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string picture = 4;
  if (!this->_internal_picture().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_picture());
  }

  // .oteldemo.Money price_usd = 5;
  if (this->_internal_has_price_usd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.price_usd_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Product::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Product::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Product::GetClassData() const { return &_class_data_; }


void Product::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Product*>(&to_msg);
  auto& from = static_cast<const Product&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.Product)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.categories_.MergeFrom(from._impl_.categories_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_picture().empty()) {
    _this->_internal_set_picture(from._internal_picture());
  }
  if (from._internal_has_price_usd()) {
    _this->_internal_mutable_price_usd()->::oteldemo::Money::MergeFrom(
        from._internal_price_usd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  return true;
}

void Product::InternalSwap(Product* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.categories_.InternalSwap(&other->_impl_.categories_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.picture_, lhs_arena,
      &other->_impl_.picture_, rhs_arena
  );
  swap(_impl_.price_usd_, other->_impl_.price_usd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Product::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[8]);
}

// ===================================================================

class ListProductsResponse::_Internal {
 public:
};

ListProductsResponse::ListProductsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ListProductsResponse)
}
ListProductsResponse::ListProductsResponse(const ListProductsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListProductsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.products_){from._impl_.products_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.ListProductsResponse)
}

inline void ListProductsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.products_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListProductsResponse::~ListProductsResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.ListProductsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListProductsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.products_.~RepeatedPtrField();
}

void ListProductsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListProductsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ListProductsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.products_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProductsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .oteldemo.Product products = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_products(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListProductsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ListProductsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oteldemo.Product products = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_products_size()); i < n; i++) {
    const auto& repfield = this->_internal_products(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ListProductsResponse)
  return target;
}

size_t ListProductsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ListProductsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.Product products = 1;
  total_size += 1UL * this->_internal_products_size();
  for (const auto& msg : this->_impl_.products_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProductsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListProductsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProductsResponse::GetClassData() const { return &_class_data_; }


void ListProductsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListProductsResponse*>(&to_msg);
  auto& from = static_cast<const ListProductsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ListProductsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.products_.MergeFrom(from._impl_.products_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProductsResponse::CopyFrom(const ListProductsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ListProductsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProductsResponse::IsInitialized() const {
  return true;
}

void ListProductsResponse::InternalSwap(ListProductsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.products_.InternalSwap(&other->_impl_.products_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProductsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[9]);
}

// ===================================================================

class GetProductRequest::_Internal {
 public:
};

GetProductRequest::GetProductRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetProductRequest)
}
GetProductRequest::GetProductRequest(const GetProductRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetProductRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetProductRequest)
}

inline void GetProductRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetProductRequest::~GetProductRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.GetProductRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetProductRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void GetProductRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetProductRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetProductRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProductRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.GetProductRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetProductRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetProductRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.GetProductRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetProductRequest)
  return target;
}

size_t GetProductRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetProductRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProductRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetProductRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProductRequest::GetClassData() const { return &_class_data_; }


void GetProductRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetProductRequest*>(&to_msg);
  auto& from = static_cast<const GetProductRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetProductRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProductRequest::CopyFrom(const GetProductRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetProductRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProductRequest::IsInitialized() const {
  return true;
}

void GetProductRequest::InternalSwap(GetProductRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProductRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[10]);
}

// ===================================================================

class SearchProductsRequest::_Internal {
 public:
};

SearchProductsRequest::SearchProductsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.SearchProductsRequest)
}
SearchProductsRequest::SearchProductsRequest(const SearchProductsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchProductsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.query_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.query_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.query_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_query().empty()) {
    _this->_impl_.query_.Set(from._internal_query(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.SearchProductsRequest)
}

inline void SearchProductsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.query_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.query_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.query_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchProductsRequest::~SearchProductsRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.SearchProductsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchProductsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.query_.Destroy();
}

void SearchProductsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchProductsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.SearchProductsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.query_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchProductsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.SearchProductsRequest.query"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchProductsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.SearchProductsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (!this->_internal_query().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.SearchProductsRequest.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.SearchProductsRequest)
  return target;
}

size_t SearchProductsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.SearchProductsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (!this->_internal_query().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchProductsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchProductsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchProductsRequest::GetClassData() const { return &_class_data_; }


void SearchProductsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchProductsRequest*>(&to_msg);
  auto& from = static_cast<const SearchProductsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.SearchProductsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_query().empty()) {
    _this->_internal_set_query(from._internal_query());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchProductsRequest::CopyFrom(const SearchProductsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.SearchProductsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchProductsRequest::IsInitialized() const {
  return true;
}

void SearchProductsRequest::InternalSwap(SearchProductsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.query_, lhs_arena,
      &other->_impl_.query_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchProductsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[11]);
}

// ===================================================================

class SearchProductsResponse::_Internal {
 public:
};

SearchProductsResponse::SearchProductsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.SearchProductsResponse)
}
SearchProductsResponse::SearchProductsResponse(const SearchProductsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchProductsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.results_){from._impl_.results_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.SearchProductsResponse)
}

inline void SearchProductsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.results_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SearchProductsResponse::~SearchProductsResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.SearchProductsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchProductsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.~RepeatedPtrField();
}

void SearchProductsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchProductsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.SearchProductsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchProductsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .oteldemo.Product results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchProductsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.SearchProductsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oteldemo.Product results = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.SearchProductsResponse)
  return target;
}

size_t SearchProductsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.SearchProductsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.Product results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->_impl_.results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchProductsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchProductsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchProductsResponse::GetClassData() const { return &_class_data_; }


void SearchProductsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchProductsResponse*>(&to_msg);
  auto& from = static_cast<const SearchProductsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.SearchProductsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchProductsResponse::CopyFrom(const SearchProductsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.SearchProductsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchProductsResponse::IsInitialized() const {
  return true;
}

void SearchProductsResponse::InternalSwap(SearchProductsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchProductsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[12]);
}

// ===================================================================

class GetQuoteRequest::_Internal {
 public:
  static const ::oteldemo::Address& address(const GetQuoteRequest* msg);
};

const ::oteldemo::Address&
GetQuoteRequest::_Internal::address(const GetQuoteRequest* msg) {
  return *msg->_impl_.address_;
}
GetQuoteRequest::GetQuoteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetQuoteRequest)
}
GetQuoteRequest::GetQuoteRequest(const GetQuoteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetQuoteRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.address_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_address()) {
    _this->_impl_.address_ = new ::oteldemo::Address(*from._impl_.address_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetQuoteRequest)
}

inline void GetQuoteRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.address_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetQuoteRequest::~GetQuoteRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.GetQuoteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetQuoteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.address_;
}

void GetQuoteRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetQuoteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.address_ != nullptr) {
    delete _impl_.address_;
  }
  _impl_.address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetQuoteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Address address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .oteldemo.CartItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetQuoteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetQuoteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Address address = 1;
  if (this->_internal_has_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::address(this),
        _Internal::address(this).GetCachedSize(), target, stream);
  }

  // repeated .oteldemo.CartItem items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetQuoteRequest)
  return target;
}

size_t GetQuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetQuoteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.CartItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .oteldemo.Address address = 1;
  if (this->_internal_has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetQuoteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetQuoteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetQuoteRequest::GetClassData() const { return &_class_data_; }


void GetQuoteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetQuoteRequest*>(&to_msg);
  auto& from = static_cast<const GetQuoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetQuoteRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_has_address()) {
    _this->_internal_mutable_address()->::oteldemo::Address::MergeFrom(
        from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetQuoteRequest::CopyFrom(const GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuoteRequest::IsInitialized() const {
  return true;
}

void GetQuoteRequest::InternalSwap(GetQuoteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQuoteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[13]);
}

// ===================================================================

class GetQuoteResponse::_Internal {
 public:
  static const ::oteldemo::Money& cost_usd(const GetQuoteResponse* msg);
};

const ::oteldemo::Money&
GetQuoteResponse::_Internal::cost_usd(const GetQuoteResponse* msg) {
  return *msg->_impl_.cost_usd_;
}
GetQuoteResponse::GetQuoteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetQuoteResponse)
}
GetQuoteResponse::GetQuoteResponse(const GetQuoteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetQuoteResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cost_usd_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cost_usd()) {
    _this->_impl_.cost_usd_ = new ::oteldemo::Money(*from._impl_.cost_usd_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetQuoteResponse)
}

inline void GetQuoteResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cost_usd_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetQuoteResponse::~GetQuoteResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.GetQuoteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetQuoteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.cost_usd_;
}

void GetQuoteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetQuoteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.cost_usd_ != nullptr) {
    delete _impl_.cost_usd_;
  }
  _impl_.cost_usd_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetQuoteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Money cost_usd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cost_usd(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetQuoteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetQuoteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Money cost_usd = 1;
  if (this->_internal_has_cost_usd()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::cost_usd(this),
        _Internal::cost_usd(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetQuoteResponse)
  return target;
}

size_t GetQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetQuoteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .oteldemo.Money cost_usd = 1;
  if (this->_internal_has_cost_usd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cost_usd_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetQuoteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetQuoteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetQuoteResponse::GetClassData() const { return &_class_data_; }


void GetQuoteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetQuoteResponse*>(&to_msg);
  auto& from = static_cast<const GetQuoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetQuoteResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cost_usd()) {
    _this->_internal_mutable_cost_usd()->::oteldemo::Money::MergeFrom(
        from._internal_cost_usd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetQuoteResponse::CopyFrom(const GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuoteResponse::IsInitialized() const {
  return true;
}

void GetQuoteResponse::InternalSwap(GetQuoteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cost_usd_, other->_impl_.cost_usd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQuoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[14]);
}

// ===================================================================

class ShipOrderRequest::_Internal {
 public:
  static const ::oteldemo::Address& address(const ShipOrderRequest* msg);
};

const ::oteldemo::Address&
ShipOrderRequest::_Internal::address(const ShipOrderRequest* msg) {
  return *msg->_impl_.address_;
}
ShipOrderRequest::ShipOrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ShipOrderRequest)
}
ShipOrderRequest::ShipOrderRequest(const ShipOrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShipOrderRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.address_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_address()) {
    _this->_impl_.address_ = new ::oteldemo::Address(*from._impl_.address_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.ShipOrderRequest)
}

inline void ShipOrderRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.address_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShipOrderRequest::~ShipOrderRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.ShipOrderRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShipOrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.address_;
}

void ShipOrderRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShipOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ShipOrderRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.address_ != nullptr) {
    delete _impl_.address_;
  }
  _impl_.address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShipOrderRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Address address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .oteldemo.CartItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShipOrderRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ShipOrderRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Address address = 1;
  if (this->_internal_has_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::address(this),
        _Internal::address(this).GetCachedSize(), target, stream);
  }

  // repeated .oteldemo.CartItem items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ShipOrderRequest)
  return target;
}

size_t ShipOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ShipOrderRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.CartItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .oteldemo.Address address = 1;
  if (this->_internal_has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShipOrderRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShipOrderRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShipOrderRequest::GetClassData() const { return &_class_data_; }


void ShipOrderRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShipOrderRequest*>(&to_msg);
  auto& from = static_cast<const ShipOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ShipOrderRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_has_address()) {
    _this->_internal_mutable_address()->::oteldemo::Address::MergeFrom(
        from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShipOrderRequest::CopyFrom(const ShipOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ShipOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipOrderRequest::IsInitialized() const {
  return true;
}

void ShipOrderRequest::InternalSwap(ShipOrderRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShipOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[15]);
}

// ===================================================================

class ShipOrderResponse::_Internal {
 public:
};

ShipOrderResponse::ShipOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ShipOrderResponse)
}
ShipOrderResponse::ShipOrderResponse(const ShipOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShipOrderResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tracking_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tracking_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tracking_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tracking_id().empty()) {
    _this->_impl_.tracking_id_.Set(from._internal_tracking_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.ShipOrderResponse)
}

inline void ShipOrderResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tracking_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tracking_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tracking_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShipOrderResponse::~ShipOrderResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.ShipOrderResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShipOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tracking_id_.Destroy();
}

void ShipOrderResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShipOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ShipOrderResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tracking_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShipOrderResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tracking_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tracking_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.ShipOrderResponse.tracking_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShipOrderResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ShipOrderResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tracking_id = 1;
  if (!this->_internal_tracking_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tracking_id().data(), static_cast<int>(this->_internal_tracking_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.ShipOrderResponse.tracking_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tracking_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ShipOrderResponse)
  return target;
}

size_t ShipOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ShipOrderResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tracking_id = 1;
  if (!this->_internal_tracking_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tracking_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShipOrderResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShipOrderResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShipOrderResponse::GetClassData() const { return &_class_data_; }


void ShipOrderResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShipOrderResponse*>(&to_msg);
  auto& from = static_cast<const ShipOrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ShipOrderResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShipOrderResponse::CopyFrom(const ShipOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ShipOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipOrderResponse::IsInitialized() const {
  return true;
}

void ShipOrderResponse::InternalSwap(ShipOrderResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tracking_id_, lhs_arena,
      &other->_impl_.tracking_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ShipOrderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[16]);
}

// ===================================================================

class Address::_Internal {
 public:
};

Address::Address(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.Address)
}
Address::Address(const Address& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Address* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.street_address_){}
    , decltype(_impl_.city_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.country_){}
    , decltype(_impl_.zip_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.street_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.street_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_street_address().empty()) {
    _this->_impl_.street_address_.Set(from._internal_street_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.city_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_city().empty()) {
    _this->_impl_.city_.Set(from._internal_city(), 
      _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  _impl_.country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.country_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country().empty()) {
    _this->_impl_.country_.Set(from._internal_country(), 
      _this->GetArenaForAllocation());
  }
  _impl_.zip_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.zip_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_zip_code().empty()) {
    _this->_impl_.zip_code_.Set(from._internal_zip_code(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.Address)
}

inline void Address::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.street_address_){}
    , decltype(_impl_.city_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.country_){}
    , decltype(_impl_.zip_code_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.street_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.street_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.city_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.country_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.zip_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.zip_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:oteldemo.Address)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Address::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.street_address_.Destroy();
  _impl_.city_.Destroy();
  _impl_.state_.Destroy();
  _impl_.country_.Destroy();
  _impl_.zip_code_.Destroy();
}

void Address::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.Address)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.street_address_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  _impl_.zip_code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Address::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string street_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_street_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Address.street_address"));
        } else
          goto handle_unusual;
        continue;
      // string city = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_city();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Address.city"));
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Address.state"));
        } else
          goto handle_unusual;
        continue;
      // string country = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_country();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Address.country"));
        } else
          goto handle_unusual;
        continue;
      // string zip_code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_zip_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Address.zip_code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Address::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.Address)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string street_address = 1;
  if (!this->_internal_street_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_street_address().data(), static_cast<int>(this->_internal_street_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Address.street_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_street_address(), target);
  }

  // string city = 2;
  if (!this->_internal_city().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_city().data(), static_cast<int>(this->_internal_city().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Address.city");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_city(), target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Address.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string country = 4;
  if (!this->_internal_country().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country().data(), static_cast<int>(this->_internal_country().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Address.country");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_country(), target);
  }

  // string zip_code = 5;
  if (!this->_internal_zip_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_zip_code().data(), static_cast<int>(this->_internal_zip_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Address.zip_code");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_zip_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.Address)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string street_address = 1;
  if (!this->_internal_street_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_street_address());
  }

  // string city = 2;
  if (!this->_internal_city().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_city());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string country = 4;
  if (!this->_internal_country().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country());
  }

  // string zip_code = 5;
  if (!this->_internal_zip_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_zip_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Address::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Address::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Address::GetClassData() const { return &_class_data_; }


void Address::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Address*>(&to_msg);
  auto& from = static_cast<const Address&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.Address)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_street_address().empty()) {
    _this->_internal_set_street_address(from._internal_street_address());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if (!from._internal_zip_code().empty()) {
    _this->_internal_set_zip_code(from._internal_zip_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::InternalSwap(Address* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.street_address_, lhs_arena,
      &other->_impl_.street_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.city_, lhs_arena,
      &other->_impl_.city_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.country_, lhs_arena,
      &other->_impl_.country_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.zip_code_, lhs_arena,
      &other->_impl_.zip_code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Address::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[17]);
}

// ===================================================================

class Money::_Internal {
 public:
};

Money::Money(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.Money)
}
Money::Money(const Money& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Money* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_code_){}
    , decltype(_impl_.units_){}
    , decltype(_impl_.nanos_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.currency_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.currency_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_currency_code().empty()) {
    _this->_impl_.currency_code_.Set(from._internal_currency_code(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.units_, &from._impl_.units_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.nanos_) -
    reinterpret_cast<char*>(&_impl_.units_)) + sizeof(_impl_.nanos_));
  // @@protoc_insertion_point(copy_constructor:oteldemo.Money)
}

inline void Money::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_code_){}
    , decltype(_impl_.units_){int64_t{0}}
    , decltype(_impl_.nanos_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.currency_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.currency_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Money::~Money() {
  // @@protoc_insertion_point(destructor:oteldemo.Money)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Money::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.currency_code_.Destroy();
}

void Money::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Money::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.Money)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currency_code_.ClearToEmpty();
  ::memset(&_impl_.units_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.nanos_) -
      reinterpret_cast<char*>(&_impl_.units_)) + sizeof(_impl_.nanos_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Money::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string currency_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_currency_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Money.currency_code"));
        } else
          goto handle_unusual;
        continue;
      // int64 units = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.units_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 nanos = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.nanos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Money::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.Money)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string currency_code = 1;
  if (!this->_internal_currency_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency_code().data(), static_cast<int>(this->_internal_currency_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Money.currency_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_currency_code(), target);
  }

  // int64 units = 2;
  if (this->_internal_units() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_units(), target);
  }

  // int32 nanos = 3;
  if (this->_internal_nanos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_nanos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.Money)
  return target;
}

size_t Money::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.Money)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currency_code = 1;
  if (!this->_internal_currency_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency_code());
  }

  // int64 units = 2;
  if (this->_internal_units() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_units());
  }

  // int32 nanos = 3;
  if (this->_internal_nanos() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nanos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Money::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Money::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Money::GetClassData() const { return &_class_data_; }


void Money::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Money*>(&to_msg);
  auto& from = static_cast<const Money&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.Money)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_currency_code().empty()) {
    _this->_internal_set_currency_code(from._internal_currency_code());
  }
  if (from._internal_units() != 0) {
    _this->_internal_set_units(from._internal_units());
  }
  if (from._internal_nanos() != 0) {
    _this->_internal_set_nanos(from._internal_nanos());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Money::CopyFrom(const Money& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.Money)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Money::IsInitialized() const {
  return true;
}

void Money::InternalSwap(Money* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.currency_code_, lhs_arena,
      &other->_impl_.currency_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Money, _impl_.nanos_)
      + sizeof(Money::_impl_.nanos_)
      - PROTOBUF_FIELD_OFFSET(Money, _impl_.units_)>(
          reinterpret_cast<char*>(&_impl_.units_),
          reinterpret_cast<char*>(&other->_impl_.units_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Money::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[18]);
}

// ===================================================================

class GetSupportedCurrenciesResponse::_Internal {
 public:
};

GetSupportedCurrenciesResponse::GetSupportedCurrenciesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetSupportedCurrenciesResponse)
}
GetSupportedCurrenciesResponse::GetSupportedCurrenciesResponse(const GetSupportedCurrenciesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSupportedCurrenciesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_codes_){from._impl_.currency_codes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetSupportedCurrenciesResponse)
}

inline void GetSupportedCurrenciesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_codes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSupportedCurrenciesResponse::~GetSupportedCurrenciesResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.GetSupportedCurrenciesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSupportedCurrenciesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.currency_codes_.~RepeatedPtrField();
}

void GetSupportedCurrenciesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSupportedCurrenciesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetSupportedCurrenciesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currency_codes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedCurrenciesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string currency_codes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_currency_codes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "oteldemo.GetSupportedCurrenciesResponse.currency_codes"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSupportedCurrenciesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetSupportedCurrenciesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string currency_codes = 1;
  for (int i = 0, n = this->_internal_currency_codes_size(); i < n; i++) {
    const auto& s = this->_internal_currency_codes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.GetSupportedCurrenciesResponse.currency_codes");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetSupportedCurrenciesResponse)
  return target;
}

size_t GetSupportedCurrenciesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetSupportedCurrenciesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string currency_codes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.currency_codes_.size());
  for (int i = 0, n = _impl_.currency_codes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.currency_codes_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSupportedCurrenciesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSupportedCurrenciesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSupportedCurrenciesResponse::GetClassData() const { return &_class_data_; }


void GetSupportedCurrenciesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSupportedCurrenciesResponse*>(&to_msg);
  auto& from = static_cast<const GetSupportedCurrenciesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetSupportedCurrenciesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.currency_codes_.MergeFrom(from._impl_.currency_codes_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSupportedCurrenciesResponse::CopyFrom(const GetSupportedCurrenciesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetSupportedCurrenciesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedCurrenciesResponse::IsInitialized() const {
  return true;
}

void GetSupportedCurrenciesResponse::InternalSwap(GetSupportedCurrenciesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.currency_codes_.InternalSwap(&other->_impl_.currency_codes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedCurrenciesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[19]);
}

// ===================================================================

class CurrencyConversionRequest::_Internal {
 public:
  static const ::oteldemo::Money& from(const CurrencyConversionRequest* msg);
};

const ::oteldemo::Money&
CurrencyConversionRequest::_Internal::from(const CurrencyConversionRequest* msg) {
  return *msg->_impl_.from_;
}
CurrencyConversionRequest::CurrencyConversionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.CurrencyConversionRequest)
}
CurrencyConversionRequest::CurrencyConversionRequest(const CurrencyConversionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CurrencyConversionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.to_code_){}
    , decltype(_impl_.from_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.to_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.to_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_code().empty()) {
    _this->_impl_.to_code_.Set(from._internal_to_code(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::oteldemo::Money(*from._impl_.from_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.CurrencyConversionRequest)
}

inline void CurrencyConversionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.to_code_){}
    , decltype(_impl_.from_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.to_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.to_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CurrencyConversionRequest::~CurrencyConversionRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.CurrencyConversionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CurrencyConversionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.to_code_.Destroy();
  if (this != internal_default_instance()) delete _impl_.from_;
}

void CurrencyConversionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CurrencyConversionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.CurrencyConversionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.to_code_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CurrencyConversionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Money from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string to_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.CurrencyConversionRequest.to_code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CurrencyConversionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.CurrencyConversionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Money from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // string to_code = 2;
  if (!this->_internal_to_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_code().data(), static_cast<int>(this->_internal_to_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.CurrencyConversionRequest.to_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.CurrencyConversionRequest)
  return target;
}

size_t CurrencyConversionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.CurrencyConversionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string to_code = 2;
  if (!this->_internal_to_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_code());
  }

  // .oteldemo.Money from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CurrencyConversionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CurrencyConversionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CurrencyConversionRequest::GetClassData() const { return &_class_data_; }


void CurrencyConversionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CurrencyConversionRequest*>(&to_msg);
  auto& from = static_cast<const CurrencyConversionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.CurrencyConversionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_to_code().empty()) {
    _this->_internal_set_to_code(from._internal_to_code());
  }
  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::oteldemo::Money::MergeFrom(
        from._internal_from());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CurrencyConversionRequest::CopyFrom(const CurrencyConversionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.CurrencyConversionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyConversionRequest::IsInitialized() const {
  return true;
}

void CurrencyConversionRequest::InternalSwap(CurrencyConversionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.to_code_, lhs_arena,
      &other->_impl_.to_code_, rhs_arena
  );
  swap(_impl_.from_, other->_impl_.from_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CurrencyConversionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[20]);
}

// ===================================================================

class CreditCardInfo::_Internal {
 public:
};

CreditCardInfo::CreditCardInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.CreditCardInfo)
}
CreditCardInfo::CreditCardInfo(const CreditCardInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreditCardInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.credit_card_number_){}
    , decltype(_impl_.credit_card_cvv_){}
    , decltype(_impl_.credit_card_expiration_year_){}
    , decltype(_impl_.credit_card_expiration_month_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.credit_card_number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.credit_card_number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_credit_card_number().empty()) {
    _this->_impl_.credit_card_number_.Set(from._internal_credit_card_number(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.credit_card_cvv_, &from._impl_.credit_card_cvv_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.credit_card_expiration_month_) -
    reinterpret_cast<char*>(&_impl_.credit_card_cvv_)) + sizeof(_impl_.credit_card_expiration_month_));
  // @@protoc_insertion_point(copy_constructor:oteldemo.CreditCardInfo)
}

inline void CreditCardInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.credit_card_number_){}
    , decltype(_impl_.credit_card_cvv_){0}
    , decltype(_impl_.credit_card_expiration_year_){0}
    , decltype(_impl_.credit_card_expiration_month_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.credit_card_number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.credit_card_number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreditCardInfo::~CreditCardInfo() {
  // @@protoc_insertion_point(destructor:oteldemo.CreditCardInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreditCardInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.credit_card_number_.Destroy();
}

void CreditCardInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreditCardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.CreditCardInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.credit_card_number_.ClearToEmpty();
  ::memset(&_impl_.credit_card_cvv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.credit_card_expiration_month_) -
      reinterpret_cast<char*>(&_impl_.credit_card_cvv_)) + sizeof(_impl_.credit_card_expiration_month_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreditCardInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string credit_card_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_credit_card_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.CreditCardInfo.credit_card_number"));
        } else
          goto handle_unusual;
        continue;
      // int32 credit_card_cvv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.credit_card_cvv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 credit_card_expiration_year = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.credit_card_expiration_year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 credit_card_expiration_month = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.credit_card_expiration_month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreditCardInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.CreditCardInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string credit_card_number = 1;
  if (!this->_internal_credit_card_number().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_credit_card_number().data(), static_cast<int>(this->_internal_credit_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.CreditCardInfo.credit_card_number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_credit_card_number(), target);
  }

  // int32 credit_card_cvv = 2;
  if (this->_internal_credit_card_cvv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_credit_card_cvv(), target);
  }

  // int32 credit_card_expiration_year = 3;
  if (this->_internal_credit_card_expiration_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_credit_card_expiration_year(), target);
  }

  // int32 credit_card_expiration_month = 4;
  if (this->_internal_credit_card_expiration_month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_credit_card_expiration_month(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.CreditCardInfo)
  return target;
}

size_t CreditCardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.CreditCardInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string credit_card_number = 1;
  if (!this->_internal_credit_card_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_credit_card_number());
  }

  // int32 credit_card_cvv = 2;
  if (this->_internal_credit_card_cvv() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_credit_card_cvv());
  }

  // int32 credit_card_expiration_year = 3;
  if (this->_internal_credit_card_expiration_year() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_credit_card_expiration_year());
  }

  // int32 credit_card_expiration_month = 4;
  if (this->_internal_credit_card_expiration_month() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_credit_card_expiration_month());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreditCardInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreditCardInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreditCardInfo::GetClassData() const { return &_class_data_; }


void CreditCardInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreditCardInfo*>(&to_msg);
  auto& from = static_cast<const CreditCardInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.CreditCardInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_credit_card_number().empty()) {
    _this->_internal_set_credit_card_number(from._internal_credit_card_number());
  }
  if (from._internal_credit_card_cvv() != 0) {
    _this->_internal_set_credit_card_cvv(from._internal_credit_card_cvv());
  }
  if (from._internal_credit_card_expiration_year() != 0) {
    _this->_internal_set_credit_card_expiration_year(from._internal_credit_card_expiration_year());
  }
  if (from._internal_credit_card_expiration_month() != 0) {
    _this->_internal_set_credit_card_expiration_month(from._internal_credit_card_expiration_month());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreditCardInfo::CopyFrom(const CreditCardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.CreditCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditCardInfo::IsInitialized() const {
  return true;
}

void CreditCardInfo::InternalSwap(CreditCardInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.credit_card_number_, lhs_arena,
      &other->_impl_.credit_card_number_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreditCardInfo, _impl_.credit_card_expiration_month_)
      + sizeof(CreditCardInfo::_impl_.credit_card_expiration_month_)
      - PROTOBUF_FIELD_OFFSET(CreditCardInfo, _impl_.credit_card_cvv_)>(
          reinterpret_cast<char*>(&_impl_.credit_card_cvv_),
          reinterpret_cast<char*>(&other->_impl_.credit_card_cvv_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditCardInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[21]);
}

// ===================================================================

class ChargeRequest::_Internal {
 public:
  static const ::oteldemo::Money& amount(const ChargeRequest* msg);
  static const ::oteldemo::CreditCardInfo& credit_card(const ChargeRequest* msg);
};

const ::oteldemo::Money&
ChargeRequest::_Internal::amount(const ChargeRequest* msg) {
  return *msg->_impl_.amount_;
}
const ::oteldemo::CreditCardInfo&
ChargeRequest::_Internal::credit_card(const ChargeRequest* msg) {
  return *msg->_impl_.credit_card_;
}
ChargeRequest::ChargeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ChargeRequest)
}
ChargeRequest::ChargeRequest(const ChargeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChargeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.credit_card_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_amount()) {
    _this->_impl_.amount_ = new ::oteldemo::Money(*from._impl_.amount_);
  }
  if (from._internal_has_credit_card()) {
    _this->_impl_.credit_card_ = new ::oteldemo::CreditCardInfo(*from._impl_.credit_card_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.ChargeRequest)
}

inline void ChargeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.credit_card_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChargeRequest::~ChargeRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.ChargeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChargeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.amount_;
  if (this != internal_default_instance()) delete _impl_.credit_card_;
}

void ChargeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChargeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ChargeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.credit_card_ != nullptr) {
    delete _impl_.credit_card_;
  }
  _impl_.credit_card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChargeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Money amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.CreditCardInfo credit_card = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_credit_card(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChargeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ChargeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Money amount = 1;
  if (this->_internal_has_amount()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // .oteldemo.CreditCardInfo credit_card = 2;
  if (this->_internal_has_credit_card()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::credit_card(this),
        _Internal::credit_card(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ChargeRequest)
  return target;
}

size_t ChargeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ChargeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .oteldemo.Money amount = 1;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  // .oteldemo.CreditCardInfo credit_card = 2;
  if (this->_internal_has_credit_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.credit_card_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChargeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChargeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChargeRequest::GetClassData() const { return &_class_data_; }


void ChargeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChargeRequest*>(&to_msg);
  auto& from = static_cast<const ChargeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ChargeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_amount()) {
    _this->_internal_mutable_amount()->::oteldemo::Money::MergeFrom(
        from._internal_amount());
  }
  if (from._internal_has_credit_card()) {
    _this->_internal_mutable_credit_card()->::oteldemo::CreditCardInfo::MergeFrom(
        from._internal_credit_card());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChargeRequest::CopyFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ChargeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeRequest::IsInitialized() const {
  return true;
}

void ChargeRequest::InternalSwap(ChargeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChargeRequest, _impl_.credit_card_)
      + sizeof(ChargeRequest::_impl_.credit_card_)
      - PROTOBUF_FIELD_OFFSET(ChargeRequest, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChargeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[22]);
}

// ===================================================================

class ChargeResponse::_Internal {
 public:
};

ChargeResponse::ChargeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ChargeResponse)
}
ChargeResponse::ChargeResponse(const ChargeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChargeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transaction_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.transaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.transaction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transaction_id().empty()) {
    _this->_impl_.transaction_id_.Set(from._internal_transaction_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.ChargeResponse)
}

inline void ChargeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.transaction_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.transaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.transaction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChargeResponse::~ChargeResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.ChargeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChargeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transaction_id_.Destroy();
}

void ChargeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChargeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ChargeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transaction_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChargeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.ChargeResponse.transaction_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChargeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ChargeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->_internal_transaction_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.ChargeResponse.transaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transaction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ChargeResponse)
  return target;
}

size_t ChargeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ChargeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->_internal_transaction_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChargeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChargeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChargeResponse::GetClassData() const { return &_class_data_; }


void ChargeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChargeResponse*>(&to_msg);
  auto& from = static_cast<const ChargeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ChargeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChargeResponse::CopyFrom(const ChargeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ChargeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeResponse::IsInitialized() const {
  return true;
}

void ChargeResponse::InternalSwap(ChargeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.transaction_id_, lhs_arena,
      &other->_impl_.transaction_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ChargeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[23]);
}

// ===================================================================

class OrderItem::_Internal {
 public:
  static const ::oteldemo::CartItem& item(const OrderItem* msg);
  static const ::oteldemo::Money& cost(const OrderItem* msg);
};

const ::oteldemo::CartItem&
OrderItem::_Internal::item(const OrderItem* msg) {
  return *msg->_impl_.item_;
}
const ::oteldemo::Money&
OrderItem::_Internal::cost(const OrderItem* msg) {
  return *msg->_impl_.cost_;
}
OrderItem::OrderItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.OrderItem)
}
OrderItem::OrderItem(const OrderItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.cost_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::oteldemo::CartItem(*from._impl_.item_);
  }
  if (from._internal_has_cost()) {
    _this->_impl_.cost_ = new ::oteldemo::Money(*from._impl_.cost_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.OrderItem)
}

inline void OrderItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.cost_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OrderItem::~OrderItem() {
  // @@protoc_insertion_point(destructor:oteldemo.OrderItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
  if (this != internal_default_instance()) delete _impl_.cost_;
}

void OrderItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderItem::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.OrderItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.cost_ != nullptr) {
    delete _impl_.cost_;
  }
  _impl_.cost_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.CartItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.Money cost = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cost(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.OrderItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.CartItem item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // .oteldemo.Money cost = 2;
  if (this->_internal_has_cost()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::cost(this),
        _Internal::cost(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.OrderItem)
  return target;
}

size_t OrderItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.OrderItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .oteldemo.CartItem item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // .oteldemo.Money cost = 2;
  if (this->_internal_has_cost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cost_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderItem::GetClassData() const { return &_class_data_; }


void OrderItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderItem*>(&to_msg);
  auto& from = static_cast<const OrderItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.OrderItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::oteldemo::CartItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_has_cost()) {
    _this->_internal_mutable_cost()->::oteldemo::Money::MergeFrom(
        from._internal_cost());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderItem::CopyFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderItem::IsInitialized() const {
  return true;
}

void OrderItem::InternalSwap(OrderItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderItem, _impl_.cost_)
      + sizeof(OrderItem::_impl_.cost_)
      - PROTOBUF_FIELD_OFFSET(OrderItem, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[24]);
}

// ===================================================================

class OrderResult::_Internal {
 public:
  static const ::oteldemo::Money& shipping_cost(const OrderResult* msg);
  static const ::oteldemo::Address& shipping_address(const OrderResult* msg);
};

const ::oteldemo::Money&
OrderResult::_Internal::shipping_cost(const OrderResult* msg) {
  return *msg->_impl_.shipping_cost_;
}
const ::oteldemo::Address&
OrderResult::_Internal::shipping_address(const OrderResult* msg) {
  return *msg->_impl_.shipping_address_;
}
OrderResult::OrderResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.OrderResult)
}
OrderResult::OrderResult(const OrderResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.order_id_){}
    , decltype(_impl_.shipping_tracking_id_){}
    , decltype(_impl_.shipping_cost_){nullptr}
    , decltype(_impl_.shipping_address_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.order_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id().empty()) {
    _this->_impl_.order_id_.Set(from._internal_order_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.shipping_tracking_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.shipping_tracking_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shipping_tracking_id().empty()) {
    _this->_impl_.shipping_tracking_id_.Set(from._internal_shipping_tracking_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_shipping_cost()) {
    _this->_impl_.shipping_cost_ = new ::oteldemo::Money(*from._impl_.shipping_cost_);
  }
  if (from._internal_has_shipping_address()) {
    _this->_impl_.shipping_address_ = new ::oteldemo::Address(*from._impl_.shipping_address_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.OrderResult)
}

inline void OrderResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.order_id_){}
    , decltype(_impl_.shipping_tracking_id_){}
    , decltype(_impl_.shipping_cost_){nullptr}
    , decltype(_impl_.shipping_address_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.order_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.shipping_tracking_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.shipping_tracking_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrderResult::~OrderResult() {
  // @@protoc_insertion_point(destructor:oteldemo.OrderResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.order_id_.Destroy();
  _impl_.shipping_tracking_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.shipping_cost_;
  if (this != internal_default_instance()) delete _impl_.shipping_address_;
}

void OrderResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderResult::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.OrderResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.order_id_.ClearToEmpty();
  _impl_.shipping_tracking_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.shipping_cost_ != nullptr) {
    delete _impl_.shipping_cost_;
  }
  _impl_.shipping_cost_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.shipping_address_ != nullptr) {
    delete _impl_.shipping_address_;
  }
  _impl_.shipping_address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string order_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.OrderResult.order_id"));
        } else
          goto handle_unusual;
        continue;
      // string shipping_tracking_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_shipping_tracking_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.OrderResult.shipping_tracking_id"));
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.Money shipping_cost = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_shipping_cost(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.Address shipping_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_shipping_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .oteldemo.OrderItem items = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.OrderResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id().data(), static_cast<int>(this->_internal_order_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.OrderResult.order_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id(), target);
  }

  // string shipping_tracking_id = 2;
  if (!this->_internal_shipping_tracking_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shipping_tracking_id().data(), static_cast<int>(this->_internal_shipping_tracking_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.OrderResult.shipping_tracking_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_shipping_tracking_id(), target);
  }

  // .oteldemo.Money shipping_cost = 3;
  if (this->_internal_has_shipping_cost()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::shipping_cost(this),
        _Internal::shipping_cost(this).GetCachedSize(), target, stream);
  }

  // .oteldemo.Address shipping_address = 4;
  if (this->_internal_has_shipping_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::shipping_address(this),
        _Internal::shipping_address(this).GetCachedSize(), target, stream);
  }

  // repeated .oteldemo.OrderItem items = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.OrderResult)
  return target;
}

size_t OrderResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.OrderResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.OrderItem items = 5;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id());
  }

  // string shipping_tracking_id = 2;
  if (!this->_internal_shipping_tracking_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shipping_tracking_id());
  }

  // .oteldemo.Money shipping_cost = 3;
  if (this->_internal_has_shipping_cost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.shipping_cost_);
  }

  // .oteldemo.Address shipping_address = 4;
  if (this->_internal_has_shipping_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.shipping_address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderResult::GetClassData() const { return &_class_data_; }


void OrderResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderResult*>(&to_msg);
  auto& from = static_cast<const OrderResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.OrderResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_shipping_tracking_id().empty()) {
    _this->_internal_set_shipping_tracking_id(from._internal_shipping_tracking_id());
  }
  if (from._internal_has_shipping_cost()) {
    _this->_internal_mutable_shipping_cost()->::oteldemo::Money::MergeFrom(
        from._internal_shipping_cost());
  }
  if (from._internal_has_shipping_address()) {
    _this->_internal_mutable_shipping_address()->::oteldemo::Address::MergeFrom(
        from._internal_shipping_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderResult::CopyFrom(const OrderResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.OrderResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderResult::IsInitialized() const {
  return true;
}

void OrderResult::InternalSwap(OrderResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id_, lhs_arena,
      &other->_impl_.order_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.shipping_tracking_id_, lhs_arena,
      &other->_impl_.shipping_tracking_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderResult, _impl_.shipping_address_)
      + sizeof(OrderResult::_impl_.shipping_address_)
      - PROTOBUF_FIELD_OFFSET(OrderResult, _impl_.shipping_cost_)>(
          reinterpret_cast<char*>(&_impl_.shipping_cost_),
          reinterpret_cast<char*>(&other->_impl_.shipping_cost_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[25]);
}

// ===================================================================

class SendOrderConfirmationRequest::_Internal {
 public:
  static const ::oteldemo::OrderResult& order(const SendOrderConfirmationRequest* msg);
};

const ::oteldemo::OrderResult&
SendOrderConfirmationRequest::_Internal::order(const SendOrderConfirmationRequest* msg) {
  return *msg->_impl_.order_;
}
SendOrderConfirmationRequest::SendOrderConfirmationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.SendOrderConfirmationRequest)
}
SendOrderConfirmationRequest::SendOrderConfirmationRequest(const SendOrderConfirmationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendOrderConfirmationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.order_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_order()) {
    _this->_impl_.order_ = new ::oteldemo::OrderResult(*from._impl_.order_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.SendOrderConfirmationRequest)
}

inline void SendOrderConfirmationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.order_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendOrderConfirmationRequest::~SendOrderConfirmationRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.SendOrderConfirmationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendOrderConfirmationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  if (this != internal_default_instance()) delete _impl_.order_;
}

void SendOrderConfirmationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendOrderConfirmationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.SendOrderConfirmationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.order_ != nullptr) {
    delete _impl_.order_;
  }
  _impl_.order_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendOrderConfirmationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.SendOrderConfirmationRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.OrderResult order = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_order(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendOrderConfirmationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.SendOrderConfirmationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.SendOrderConfirmationRequest.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  // .oteldemo.OrderResult order = 2;
  if (this->_internal_has_order()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::order(this),
        _Internal::order(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.SendOrderConfirmationRequest)
  return target;
}

size_t SendOrderConfirmationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.SendOrderConfirmationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .oteldemo.OrderResult order = 2;
  if (this->_internal_has_order()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.order_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendOrderConfirmationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendOrderConfirmationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendOrderConfirmationRequest::GetClassData() const { return &_class_data_; }


void SendOrderConfirmationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendOrderConfirmationRequest*>(&to_msg);
  auto& from = static_cast<const SendOrderConfirmationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.SendOrderConfirmationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (from._internal_has_order()) {
    _this->_internal_mutable_order()->::oteldemo::OrderResult::MergeFrom(
        from._internal_order());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendOrderConfirmationRequest::CopyFrom(const SendOrderConfirmationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.SendOrderConfirmationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendOrderConfirmationRequest::IsInitialized() const {
  return true;
}

void SendOrderConfirmationRequest::InternalSwap(SendOrderConfirmationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  swap(_impl_.order_, other->_impl_.order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendOrderConfirmationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[26]);
}

// ===================================================================

class PlaceOrderRequest::_Internal {
 public:
  static const ::oteldemo::Address& address(const PlaceOrderRequest* msg);
  static const ::oteldemo::CreditCardInfo& credit_card(const PlaceOrderRequest* msg);
};

const ::oteldemo::Address&
PlaceOrderRequest::_Internal::address(const PlaceOrderRequest* msg) {
  return *msg->_impl_.address_;
}
const ::oteldemo::CreditCardInfo&
PlaceOrderRequest::_Internal::credit_card(const PlaceOrderRequest* msg) {
  return *msg->_impl_.credit_card_;
}
PlaceOrderRequest::PlaceOrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.PlaceOrderRequest)
}
PlaceOrderRequest::PlaceOrderRequest(const PlaceOrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PlaceOrderRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.user_currency_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.address_){nullptr}
    , decltype(_impl_.credit_card_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_currency_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_currency_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_currency().empty()) {
    _this->_impl_.user_currency_.Set(from._internal_user_currency(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_address()) {
    _this->_impl_.address_ = new ::oteldemo::Address(*from._impl_.address_);
  }
  if (from._internal_has_credit_card()) {
    _this->_impl_.credit_card_ = new ::oteldemo::CreditCardInfo(*from._impl_.credit_card_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.PlaceOrderRequest)
}

inline void PlaceOrderRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.user_currency_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.address_){nullptr}
    , decltype(_impl_.credit_card_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_currency_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_currency_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PlaceOrderRequest::~PlaceOrderRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.PlaceOrderRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PlaceOrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.user_currency_.Destroy();
  _impl_.email_.Destroy();
  if (this != internal_default_instance()) delete _impl_.address_;
  if (this != internal_default_instance()) delete _impl_.credit_card_;
}

void PlaceOrderRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlaceOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.PlaceOrderRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.user_currency_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.address_ != nullptr) {
    delete _impl_.address_;
  }
  _impl_.address_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.credit_card_ != nullptr) {
    delete _impl_.credit_card_;
  }
  _impl_.credit_card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlaceOrderRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.PlaceOrderRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_currency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_currency();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.PlaceOrderRequest.user_currency"));
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.Address address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string email = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.PlaceOrderRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // .oteldemo.CreditCardInfo credit_card = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_credit_card(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PlaceOrderRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.PlaceOrderRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.PlaceOrderRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // string user_currency = 2;
  if (!this->_internal_user_currency().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_currency().data(), static_cast<int>(this->_internal_user_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.PlaceOrderRequest.user_currency");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_currency(), target);
  }

  // .oteldemo.Address address = 3;
  if (this->_internal_has_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::address(this),
        _Internal::address(this).GetCachedSize(), target, stream);
  }

  // string email = 5;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.PlaceOrderRequest.email");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_email(), target);
  }

  // .oteldemo.CreditCardInfo credit_card = 6;
  if (this->_internal_has_credit_card()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::credit_card(this),
        _Internal::credit_card(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.PlaceOrderRequest)
  return target;
}

size_t PlaceOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.PlaceOrderRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string user_currency = 2;
  if (!this->_internal_user_currency().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_currency());
  }

  // string email = 5;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .oteldemo.Address address = 3;
  if (this->_internal_has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.address_);
  }

  // .oteldemo.CreditCardInfo credit_card = 6;
  if (this->_internal_has_credit_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.credit_card_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlaceOrderRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlaceOrderRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlaceOrderRequest::GetClassData() const { return &_class_data_; }


void PlaceOrderRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlaceOrderRequest*>(&to_msg);
  auto& from = static_cast<const PlaceOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.PlaceOrderRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_user_currency().empty()) {
    _this->_internal_set_user_currency(from._internal_user_currency());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (from._internal_has_address()) {
    _this->_internal_mutable_address()->::oteldemo::Address::MergeFrom(
        from._internal_address());
  }
  if (from._internal_has_credit_card()) {
    _this->_internal_mutable_credit_card()->::oteldemo::CreditCardInfo::MergeFrom(
        from._internal_credit_card());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlaceOrderRequest::CopyFrom(const PlaceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.PlaceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceOrderRequest::IsInitialized() const {
  return true;
}

void PlaceOrderRequest::InternalSwap(PlaceOrderRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_currency_, lhs_arena,
      &other->_impl_.user_currency_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.credit_card_)
      + sizeof(PlaceOrderRequest::_impl_.credit_card_)
      - PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlaceOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[27]);
}

// ===================================================================

class PlaceOrderResponse::_Internal {
 public:
  static const ::oteldemo::OrderResult& order(const PlaceOrderResponse* msg);
};

const ::oteldemo::OrderResult&
PlaceOrderResponse::_Internal::order(const PlaceOrderResponse* msg) {
  return *msg->_impl_.order_;
}
PlaceOrderResponse::PlaceOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.PlaceOrderResponse)
}
PlaceOrderResponse::PlaceOrderResponse(const PlaceOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PlaceOrderResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_order()) {
    _this->_impl_.order_ = new ::oteldemo::OrderResult(*from._impl_.order_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.PlaceOrderResponse)
}

inline void PlaceOrderResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PlaceOrderResponse::~PlaceOrderResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.PlaceOrderResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PlaceOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.order_;
}

void PlaceOrderResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlaceOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.PlaceOrderResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.order_ != nullptr) {
    delete _impl_.order_;
  }
  _impl_.order_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlaceOrderResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.OrderResult order = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_order(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PlaceOrderResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.PlaceOrderResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.OrderResult order = 1;
  if (this->_internal_has_order()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::order(this),
        _Internal::order(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.PlaceOrderResponse)
  return target;
}

size_t PlaceOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.PlaceOrderResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .oteldemo.OrderResult order = 1;
  if (this->_internal_has_order()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.order_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlaceOrderResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlaceOrderResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlaceOrderResponse::GetClassData() const { return &_class_data_; }


void PlaceOrderResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlaceOrderResponse*>(&to_msg);
  auto& from = static_cast<const PlaceOrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.PlaceOrderResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_order()) {
    _this->_internal_mutable_order()->::oteldemo::OrderResult::MergeFrom(
        from._internal_order());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlaceOrderResponse::CopyFrom(const PlaceOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.PlaceOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceOrderResponse::IsInitialized() const {
  return true;
}

void PlaceOrderResponse::InternalSwap(PlaceOrderResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.order_, other->_impl_.order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlaceOrderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[28]);
}

// ===================================================================

class AdRequest::_Internal {
 public:
};

AdRequest::AdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.AdRequest)
}
AdRequest::AdRequest(const AdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_keys_){from._impl_.context_keys_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.AdRequest)
}

inline void AdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_keys_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AdRequest::~AdRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.AdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_keys_.~RepeatedPtrField();
}

void AdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.AdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_keys_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string context_keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_context_keys();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "oteldemo.AdRequest.context_keys"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.AdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string context_keys = 1;
  for (int i = 0, n = this->_internal_context_keys_size(); i < n; i++) {
    const auto& s = this->_internal_context_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.AdRequest.context_keys");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.AdRequest)
  return target;
}

size_t AdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.AdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string context_keys = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.context_keys_.size());
  for (int i = 0, n = _impl_.context_keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.context_keys_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AdRequest::GetClassData() const { return &_class_data_; }


void AdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AdRequest*>(&to_msg);
  auto& from = static_cast<const AdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.AdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_keys_.MergeFrom(from._impl_.context_keys_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AdRequest::CopyFrom(const AdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.AdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdRequest::IsInitialized() const {
  return true;
}

void AdRequest::InternalSwap(AdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.context_keys_.InternalSwap(&other->_impl_.context_keys_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[29]);
}

// ===================================================================

class AdResponse::_Internal {
 public:
};

AdResponse::AdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.AdResponse)
}
AdResponse::AdResponse(const AdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ads_){from._impl_.ads_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.AdResponse)
}

inline void AdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ads_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AdResponse::~AdResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.AdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ads_.~RepeatedPtrField();
}

void AdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.AdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ads_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .oteldemo.Ad ads = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ads(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.AdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oteldemo.Ad ads = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ads_size()); i < n; i++) {
    const auto& repfield = this->_internal_ads(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.AdResponse)
  return target;
}

size_t AdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.AdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.Ad ads = 1;
  total_size += 1UL * this->_internal_ads_size();
  for (const auto& msg : this->_impl_.ads_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AdResponse::GetClassData() const { return &_class_data_; }


void AdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AdResponse*>(&to_msg);
  auto& from = static_cast<const AdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.AdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ads_.MergeFrom(from._impl_.ads_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AdResponse::CopyFrom(const AdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.AdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdResponse::IsInitialized() const {
  return true;
}

void AdResponse::InternalSwap(AdResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ads_.InternalSwap(&other->_impl_.ads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[30]);
}

// ===================================================================

class Ad::_Internal {
 public:
};

Ad::Ad(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.Ad)
}
Ad::Ad(const Ad& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Ad* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.redirect_url_){}
    , decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.redirect_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.redirect_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redirect_url().empty()) {
    _this->_impl_.redirect_url_.Set(from._internal_redirect_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.Ad)
}

inline void Ad::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.redirect_url_){}
    , decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.redirect_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.redirect_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Ad::~Ad() {
  // @@protoc_insertion_point(destructor:oteldemo.Ad)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ad::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.redirect_url_.Destroy();
  _impl_.text_.Destroy();
}

void Ad::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ad::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.Ad)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.redirect_url_.ClearToEmpty();
  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ad::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string redirect_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_redirect_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Ad.redirect_url"));
        } else
          goto handle_unusual;
        continue;
      // string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Ad.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ad::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.Ad)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string redirect_url = 1;
  if (!this->_internal_redirect_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect_url().data(), static_cast<int>(this->_internal_redirect_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Ad.redirect_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_redirect_url(), target);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Ad.text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.Ad)
  return target;
}

size_t Ad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.Ad)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string redirect_url = 1;
  if (!this->_internal_redirect_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect_url());
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ad::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Ad::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ad::GetClassData() const { return &_class_data_; }


void Ad::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Ad*>(&to_msg);
  auto& from = static_cast<const Ad&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.Ad)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_redirect_url().empty()) {
    _this->_internal_set_redirect_url(from._internal_redirect_url());
  }
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ad::CopyFrom(const Ad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.Ad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ad::IsInitialized() const {
  return true;
}

void Ad::InternalSwap(Ad* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.redirect_url_, lhs_arena,
      &other->_impl_.redirect_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Ad::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[31]);
}

// ===================================================================

class Flag::_Internal {
 public:
};

Flag::Flag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.Flag)
}
Flag::Flag(const Flag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Flag* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.enabled_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enabled_ = from._impl_.enabled_;
  // @@protoc_insertion_point(copy_constructor:oteldemo.Flag)
}

inline void Flag::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.enabled_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Flag::~Flag() {
  // @@protoc_insertion_point(destructor:oteldemo.Flag)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Flag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void Flag::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Flag::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.Flag)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Flag::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Flag.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.Flag.description"));
        } else
          goto handle_unusual;
        continue;
      // bool enabled = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Flag::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.Flag)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Flag.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.Flag.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // bool enabled = 3;
  if (this->_internal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.Flag)
  return target;
}

size_t Flag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.Flag)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // bool enabled = 3;
  if (this->_internal_enabled() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Flag::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Flag::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Flag::GetClassData() const { return &_class_data_; }


void Flag::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Flag*>(&to_msg);
  auto& from = static_cast<const Flag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.Flag)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_enabled() != 0) {
    _this->_internal_set_enabled(from._internal_enabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Flag::CopyFrom(const Flag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.Flag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Flag::IsInitialized() const {
  return true;
}

void Flag::InternalSwap(Flag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.enabled_, other->_impl_.enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Flag::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[32]);
}

// ===================================================================

class GetFlagRequest::_Internal {
 public:
};

GetFlagRequest::GetFlagRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetFlagRequest)
}
GetFlagRequest::GetFlagRequest(const GetFlagRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFlagRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetFlagRequest)
}

inline void GetFlagRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFlagRequest::~GetFlagRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.GetFlagRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFlagRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetFlagRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFlagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetFlagRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFlagRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.GetFlagRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFlagRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetFlagRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.GetFlagRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetFlagRequest)
  return target;
}

size_t GetFlagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetFlagRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFlagRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFlagRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFlagRequest::GetClassData() const { return &_class_data_; }


void GetFlagRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFlagRequest*>(&to_msg);
  auto& from = static_cast<const GetFlagRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetFlagRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFlagRequest::CopyFrom(const GetFlagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetFlagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFlagRequest::IsInitialized() const {
  return true;
}

void GetFlagRequest::InternalSwap(GetFlagRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFlagRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[33]);
}

// ===================================================================

class GetFlagResponse::_Internal {
 public:
  static const ::oteldemo::Flag& flag(const GetFlagResponse* msg);
};

const ::oteldemo::Flag&
GetFlagResponse::_Internal::flag(const GetFlagResponse* msg) {
  return *msg->_impl_.flag_;
}
GetFlagResponse::GetFlagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.GetFlagResponse)
}
GetFlagResponse::GetFlagResponse(const GetFlagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFlagResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_flag()) {
    _this->_impl_.flag_ = new ::oteldemo::Flag(*from._impl_.flag_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.GetFlagResponse)
}

inline void GetFlagResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFlagResponse::~GetFlagResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.GetFlagResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFlagResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.flag_;
}

void GetFlagResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFlagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.GetFlagResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.flag_ != nullptr) {
    delete _impl_.flag_;
  }
  _impl_.flag_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFlagResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Flag flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_flag(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFlagResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.GetFlagResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Flag flag = 1;
  if (this->_internal_has_flag()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::flag(this),
        _Internal::flag(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.GetFlagResponse)
  return target;
}

size_t GetFlagResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.GetFlagResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .oteldemo.Flag flag = 1;
  if (this->_internal_has_flag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.flag_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFlagResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFlagResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFlagResponse::GetClassData() const { return &_class_data_; }


void GetFlagResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFlagResponse*>(&to_msg);
  auto& from = static_cast<const GetFlagResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.GetFlagResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_flag()) {
    _this->_internal_mutable_flag()->::oteldemo::Flag::MergeFrom(
        from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFlagResponse::CopyFrom(const GetFlagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.GetFlagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFlagResponse::IsInitialized() const {
  return true;
}

void GetFlagResponse::InternalSwap(GetFlagResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flag_, other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFlagResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[34]);
}

// ===================================================================

class CreateFlagRequest::_Internal {
 public:
};

CreateFlagRequest::CreateFlagRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.CreateFlagRequest)
}
CreateFlagRequest::CreateFlagRequest(const CreateFlagRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateFlagRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.enabled_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enabled_ = from._impl_.enabled_;
  // @@protoc_insertion_point(copy_constructor:oteldemo.CreateFlagRequest)
}

inline void CreateFlagRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.enabled_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateFlagRequest::~CreateFlagRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.CreateFlagRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateFlagRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void CreateFlagRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateFlagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.CreateFlagRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateFlagRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.CreateFlagRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.CreateFlagRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // bool enabled = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateFlagRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.CreateFlagRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.CreateFlagRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.CreateFlagRequest.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // bool enabled = 3;
  if (this->_internal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.CreateFlagRequest)
  return target;
}

size_t CreateFlagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.CreateFlagRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // bool enabled = 3;
  if (this->_internal_enabled() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateFlagRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateFlagRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateFlagRequest::GetClassData() const { return &_class_data_; }


void CreateFlagRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateFlagRequest*>(&to_msg);
  auto& from = static_cast<const CreateFlagRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.CreateFlagRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_enabled() != 0) {
    _this->_internal_set_enabled(from._internal_enabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFlagRequest::CopyFrom(const CreateFlagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.CreateFlagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFlagRequest::IsInitialized() const {
  return true;
}

void CreateFlagRequest::InternalSwap(CreateFlagRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.enabled_, other->_impl_.enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateFlagRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[35]);
}

// ===================================================================

class CreateFlagResponse::_Internal {
 public:
  static const ::oteldemo::Flag& flag(const CreateFlagResponse* msg);
};

const ::oteldemo::Flag&
CreateFlagResponse::_Internal::flag(const CreateFlagResponse* msg) {
  return *msg->_impl_.flag_;
}
CreateFlagResponse::CreateFlagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.CreateFlagResponse)
}
CreateFlagResponse::CreateFlagResponse(const CreateFlagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateFlagResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_flag()) {
    _this->_impl_.flag_ = new ::oteldemo::Flag(*from._impl_.flag_);
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.CreateFlagResponse)
}

inline void CreateFlagResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateFlagResponse::~CreateFlagResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.CreateFlagResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateFlagResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.flag_;
}

void CreateFlagResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateFlagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.CreateFlagResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.flag_ != nullptr) {
    delete _impl_.flag_;
  }
  _impl_.flag_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateFlagResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .oteldemo.Flag flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_flag(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateFlagResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.CreateFlagResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .oteldemo.Flag flag = 1;
  if (this->_internal_has_flag()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::flag(this),
        _Internal::flag(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.CreateFlagResponse)
  return target;
}

size_t CreateFlagResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.CreateFlagResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .oteldemo.Flag flag = 1;
  if (this->_internal_has_flag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.flag_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateFlagResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateFlagResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateFlagResponse::GetClassData() const { return &_class_data_; }


void CreateFlagResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateFlagResponse*>(&to_msg);
  auto& from = static_cast<const CreateFlagResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.CreateFlagResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_flag()) {
    _this->_internal_mutable_flag()->::oteldemo::Flag::MergeFrom(
        from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFlagResponse::CopyFrom(const CreateFlagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.CreateFlagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFlagResponse::IsInitialized() const {
  return true;
}

void CreateFlagResponse::InternalSwap(CreateFlagResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flag_, other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateFlagResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[36]);
}

// ===================================================================

class UpdateFlagRequest::_Internal {
 public:
};

UpdateFlagRequest::UpdateFlagRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.UpdateFlagRequest)
}
UpdateFlagRequest::UpdateFlagRequest(const UpdateFlagRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateFlagRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.enabled_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enabled_ = from._impl_.enabled_;
  // @@protoc_insertion_point(copy_constructor:oteldemo.UpdateFlagRequest)
}

inline void UpdateFlagRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.enabled_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateFlagRequest::~UpdateFlagRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.UpdateFlagRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFlagRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void UpdateFlagRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateFlagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.UpdateFlagRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFlagRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.UpdateFlagRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bool enabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFlagRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.UpdateFlagRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.UpdateFlagRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool enabled = 2;
  if (this->_internal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.UpdateFlagRequest)
  return target;
}

size_t UpdateFlagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.UpdateFlagRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool enabled = 2;
  if (this->_internal_enabled() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFlagRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateFlagRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFlagRequest::GetClassData() const { return &_class_data_; }


void UpdateFlagRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateFlagRequest*>(&to_msg);
  auto& from = static_cast<const UpdateFlagRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.UpdateFlagRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_enabled() != 0) {
    _this->_internal_set_enabled(from._internal_enabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFlagRequest::CopyFrom(const UpdateFlagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.UpdateFlagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFlagRequest::IsInitialized() const {
  return true;
}

void UpdateFlagRequest::InternalSwap(UpdateFlagRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.enabled_, other->_impl_.enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFlagRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[37]);
}

// ===================================================================

class UpdateFlagResponse::_Internal {
 public:
};

UpdateFlagResponse::UpdateFlagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:oteldemo.UpdateFlagResponse)
}
UpdateFlagResponse::UpdateFlagResponse(const UpdateFlagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateFlagResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.UpdateFlagResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFlagResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFlagResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateFlagResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[38]);
}

// ===================================================================

class ListFlagsRequest::_Internal {
 public:
};

ListFlagsRequest::ListFlagsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:oteldemo.ListFlagsRequest)
}
ListFlagsRequest::ListFlagsRequest(const ListFlagsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ListFlagsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.ListFlagsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFlagsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFlagsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListFlagsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[39]);
}

// ===================================================================

class ListFlagsResponse::_Internal {
 public:
};

ListFlagsResponse::ListFlagsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.ListFlagsResponse)
}
ListFlagsResponse::ListFlagsResponse(const ListFlagsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListFlagsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){from._impl_.flag_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.ListFlagsResponse)
}

inline void ListFlagsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListFlagsResponse::~ListFlagsResponse() {
  // @@protoc_insertion_point(destructor:oteldemo.ListFlagsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListFlagsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.flag_.~RepeatedPtrField();
}

void ListFlagsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListFlagsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.ListFlagsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFlagsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .oteldemo.Flag flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFlagsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.ListFlagsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oteldemo.Flag flag = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flag_size()); i < n; i++) {
    const auto& repfield = this->_internal_flag(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.ListFlagsResponse)
  return target;
}

size_t ListFlagsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.ListFlagsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .oteldemo.Flag flag = 1;
  total_size += 1UL * this->_internal_flag_size();
  for (const auto& msg : this->_impl_.flag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFlagsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListFlagsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFlagsResponse::GetClassData() const { return &_class_data_; }


void ListFlagsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListFlagsResponse*>(&to_msg);
  auto& from = static_cast<const ListFlagsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.ListFlagsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.flag_.MergeFrom(from._impl_.flag_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFlagsResponse::CopyFrom(const ListFlagsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.ListFlagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFlagsResponse::IsInitialized() const {
  return true;
}

void ListFlagsResponse::InternalSwap(ListFlagsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.flag_.InternalSwap(&other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFlagsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[40]);
}

// ===================================================================

class DeleteFlagRequest::_Internal {
 public:
};

DeleteFlagRequest::DeleteFlagRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:oteldemo.DeleteFlagRequest)
}
DeleteFlagRequest::DeleteFlagRequest(const DeleteFlagRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteFlagRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:oteldemo.DeleteFlagRequest)
}

inline void DeleteFlagRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteFlagRequest::~DeleteFlagRequest() {
  // @@protoc_insertion_point(destructor:oteldemo.DeleteFlagRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteFlagRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeleteFlagRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteFlagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oteldemo.DeleteFlagRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFlagRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "oteldemo.DeleteFlagRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteFlagRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oteldemo.DeleteFlagRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "oteldemo.DeleteFlagRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oteldemo.DeleteFlagRequest)
  return target;
}

size_t DeleteFlagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oteldemo.DeleteFlagRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFlagRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteFlagRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFlagRequest::GetClassData() const { return &_class_data_; }


void DeleteFlagRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteFlagRequest*>(&to_msg);
  auto& from = static_cast<const DeleteFlagRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oteldemo.DeleteFlagRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteFlagRequest::CopyFrom(const DeleteFlagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oteldemo.DeleteFlagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFlagRequest::IsInitialized() const {
  return true;
}

void DeleteFlagRequest::InternalSwap(DeleteFlagRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFlagRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[41]);
}

// ===================================================================

class DeleteFlagResponse::_Internal {
 public:
};

DeleteFlagResponse::DeleteFlagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:oteldemo.DeleteFlagResponse)
}
DeleteFlagResponse::DeleteFlagResponse(const DeleteFlagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeleteFlagResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oteldemo.DeleteFlagResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFlagResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFlagResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteFlagResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[42]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace oteldemo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::oteldemo::CartItem*
Arena::CreateMaybeMessage< ::oteldemo::CartItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::CartItem >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::AddItemRequest*
Arena::CreateMaybeMessage< ::oteldemo::AddItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::AddItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::EmptyCartRequest*
Arena::CreateMaybeMessage< ::oteldemo::EmptyCartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::EmptyCartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetCartRequest*
Arena::CreateMaybeMessage< ::oteldemo::GetCartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetCartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Cart*
Arena::CreateMaybeMessage< ::oteldemo::Cart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Cart >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Empty*
Arena::CreateMaybeMessage< ::oteldemo::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ListRecommendationsRequest*
Arena::CreateMaybeMessage< ::oteldemo::ListRecommendationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ListRecommendationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ListRecommendationsResponse*
Arena::CreateMaybeMessage< ::oteldemo::ListRecommendationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ListRecommendationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Product*
Arena::CreateMaybeMessage< ::oteldemo::Product >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Product >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ListProductsResponse*
Arena::CreateMaybeMessage< ::oteldemo::ListProductsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ListProductsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetProductRequest*
Arena::CreateMaybeMessage< ::oteldemo::GetProductRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetProductRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::SearchProductsRequest*
Arena::CreateMaybeMessage< ::oteldemo::SearchProductsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::SearchProductsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::SearchProductsResponse*
Arena::CreateMaybeMessage< ::oteldemo::SearchProductsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::SearchProductsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetQuoteRequest*
Arena::CreateMaybeMessage< ::oteldemo::GetQuoteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetQuoteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetQuoteResponse*
Arena::CreateMaybeMessage< ::oteldemo::GetQuoteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetQuoteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ShipOrderRequest*
Arena::CreateMaybeMessage< ::oteldemo::ShipOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ShipOrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ShipOrderResponse*
Arena::CreateMaybeMessage< ::oteldemo::ShipOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ShipOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Address*
Arena::CreateMaybeMessage< ::oteldemo::Address >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Address >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Money*
Arena::CreateMaybeMessage< ::oteldemo::Money >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Money >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetSupportedCurrenciesResponse*
Arena::CreateMaybeMessage< ::oteldemo::GetSupportedCurrenciesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetSupportedCurrenciesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::CurrencyConversionRequest*
Arena::CreateMaybeMessage< ::oteldemo::CurrencyConversionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::CurrencyConversionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::CreditCardInfo*
Arena::CreateMaybeMessage< ::oteldemo::CreditCardInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::CreditCardInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ChargeRequest*
Arena::CreateMaybeMessage< ::oteldemo::ChargeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ChargeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ChargeResponse*
Arena::CreateMaybeMessage< ::oteldemo::ChargeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ChargeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::OrderItem*
Arena::CreateMaybeMessage< ::oteldemo::OrderItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::OrderItem >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::OrderResult*
Arena::CreateMaybeMessage< ::oteldemo::OrderResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::OrderResult >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::SendOrderConfirmationRequest*
Arena::CreateMaybeMessage< ::oteldemo::SendOrderConfirmationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::SendOrderConfirmationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::PlaceOrderRequest*
Arena::CreateMaybeMessage< ::oteldemo::PlaceOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::PlaceOrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::PlaceOrderResponse*
Arena::CreateMaybeMessage< ::oteldemo::PlaceOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::PlaceOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::AdRequest*
Arena::CreateMaybeMessage< ::oteldemo::AdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::AdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::AdResponse*
Arena::CreateMaybeMessage< ::oteldemo::AdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::AdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Ad*
Arena::CreateMaybeMessage< ::oteldemo::Ad >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Ad >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::Flag*
Arena::CreateMaybeMessage< ::oteldemo::Flag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::Flag >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetFlagRequest*
Arena::CreateMaybeMessage< ::oteldemo::GetFlagRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetFlagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::GetFlagResponse*
Arena::CreateMaybeMessage< ::oteldemo::GetFlagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::GetFlagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::CreateFlagRequest*
Arena::CreateMaybeMessage< ::oteldemo::CreateFlagRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::CreateFlagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::CreateFlagResponse*
Arena::CreateMaybeMessage< ::oteldemo::CreateFlagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::CreateFlagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::UpdateFlagRequest*
Arena::CreateMaybeMessage< ::oteldemo::UpdateFlagRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::UpdateFlagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::UpdateFlagResponse*
Arena::CreateMaybeMessage< ::oteldemo::UpdateFlagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::UpdateFlagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ListFlagsRequest*
Arena::CreateMaybeMessage< ::oteldemo::ListFlagsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ListFlagsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::ListFlagsResponse*
Arena::CreateMaybeMessage< ::oteldemo::ListFlagsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::ListFlagsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::DeleteFlagRequest*
Arena::CreateMaybeMessage< ::oteldemo::DeleteFlagRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::DeleteFlagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::oteldemo::DeleteFlagResponse*
Arena::CreateMaybeMessage< ::oteldemo::DeleteFlagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::oteldemo::DeleteFlagResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
